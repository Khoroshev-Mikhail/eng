{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/Components/References/References.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { SERVER_URL } from \"../../app/variables/dbVariables\";\nimport GroupCard from \"../Groups/GroupCard\";\nimport TextCard from \"../Texts/TextCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function References(props) {\n  _s();\n  const [references, setReferences] = useState({\n    group: null,\n    text: null,\n    audio: null,\n    video: null\n  });\n  useEffect(() => {\n    if (props.id_group || props.id_text || props.id_audio || props.id_video) {\n      let url = '';\n      if (props.id_group) {\n        url = `/groups/${props.id_group}`;\n      } else if (props.id_text) {\n        url = `/texts/${props.id_text}`;\n      } else if (props.id_video) {\n        url = `/audios/${props.id_audio}`;\n      } else if (props.id_video) {\n        url = `/videos/${props.id_video}`;\n      }\n      fetch(SERVER_URL + url + '/references').then(response => {\n        return response.json();\n      }).then(response => {\n        if (response.hasOwnProperty('group')) {\n          setReferences(response);\n        }\n      }).catch(err => {\n        setReferences({\n          group: null,\n          text: null,\n          audio: null,\n          video: null\n        });\n      });\n    }\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-5\",\n    children: [!props.id_text && references.text && /*#__PURE__*/_jsxDEV(TextCard, {\n      ...references.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 52\n    }, this), !props.id_group && references.text && /*#__PURE__*/_jsxDEV(GroupCard, {\n      ...references.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 53\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this)\n  // Здесь отдельно карточки с грамматикой если есть\n  ;\n}\n_s(References, \"WFr8y1VNbnnAUHmV0OKhMQCJSWE=\");\n_c = References;\nvar _c;\n$RefreshReg$(_c, \"References\");","map":{"version":3,"names":["useEffect","useState","SERVER_URL","GroupCard","TextCard","References","props","references","setReferences","group","text","audio","video","id_group","id_text","id_audio","id_video","url","fetch","then","response","json","hasOwnProperty","catch","err"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/References/References.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { ReferencesCard } from \"../../app/types/types\";\nimport { SERVER_URL } from \"../../app/variables/dbVariables\";\nimport GroupCard from \"../Groups/GroupCard\";\nimport TextCard from \"../Texts/TextCard\";\n\nexport function References(props : { id_group?: number | string, id_text?: number | string, id_audio?: number | string, id_video?: number | string}){\n    const [ references, setReferences ] = useState<ReferencesCard>({ group: null, text: null, audio: null, video: null })\n    useEffect(()=>{\n        if(props.id_group || props.id_text || props.id_audio || props.id_video){\n            let url = ''\n            if(props.id_group){\n                url = `/groups/${props.id_group}`\n            } else if(props.id_text) {\n                url = `/texts/${props.id_text}`\n            } else if(props.id_video) {\n                url = `/audios/${props.id_audio}`\n            } else if(props.id_video) {\n                url = `/videos/${props.id_video}`\n            }\n            fetch(SERVER_URL + url + '/references')\n            .then( response => {\n                return response.json()\n            })\n            .then((response: ReferencesCard) =>{\n                if(response.hasOwnProperty('group')){\n                    setReferences(response)\n                }\n            })\n            .catch(err => {\n                setReferences({ group: null, text: null, audio: null, video: null })\n            })\n        }\n        \n    }, [ props ])\n    return (\n        <div className='mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-5'>\n            {! props.id_text && references.text && <TextCard {...references.text}/>}\n            {! props.id_group && references.text && <GroupCard {...references.text}/>}\n        </div>\n        // Здесь отдельно карточки с грамматикой если есть\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,QAAQ,MAAM,mBAAmB;AAAC;AAEzC,OAAO,SAASC,UAAU,CAACC,KAAwH,EAAC;EAAA;EAChJ,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAE,GAAGP,QAAQ,CAAiB;IAAEQ,KAAK,EAAE,IAAI;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC;EACrHZ,SAAS,CAAC,MAAI;IACV,IAAGM,KAAK,CAACO,QAAQ,IAAIP,KAAK,CAACQ,OAAO,IAAIR,KAAK,CAACS,QAAQ,IAAIT,KAAK,CAACU,QAAQ,EAAC;MACnE,IAAIC,GAAG,GAAG,EAAE;MACZ,IAAGX,KAAK,CAACO,QAAQ,EAAC;QACdI,GAAG,GAAI,WAAUX,KAAK,CAACO,QAAS,EAAC;MACrC,CAAC,MAAM,IAAGP,KAAK,CAACQ,OAAO,EAAE;QACrBG,GAAG,GAAI,UAASX,KAAK,CAACQ,OAAQ,EAAC;MACnC,CAAC,MAAM,IAAGR,KAAK,CAACU,QAAQ,EAAE;QACtBC,GAAG,GAAI,WAAUX,KAAK,CAACS,QAAS,EAAC;MACrC,CAAC,MAAM,IAAGT,KAAK,CAACU,QAAQ,EAAE;QACtBC,GAAG,GAAI,WAAUX,KAAK,CAACU,QAAS,EAAC;MACrC;MACAE,KAAK,CAAChB,UAAU,GAAGe,GAAG,GAAG,aAAa,CAAC,CACtCE,IAAI,CAAEC,QAAQ,IAAI;QACf,OAAOA,QAAQ,CAACC,IAAI,EAAE;MAC1B,CAAC,CAAC,CACDF,IAAI,CAAEC,QAAwB,IAAI;QAC/B,IAAGA,QAAQ,CAACE,cAAc,CAAC,OAAO,CAAC,EAAC;UAChCd,aAAa,CAACY,QAAQ,CAAC;QAC3B;MACJ,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAI;QACVhB,aAAa,CAAC;UAAEC,KAAK,EAAE,IAAI;UAAEC,IAAI,EAAE,IAAI;UAAEC,KAAK,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;MACxE,CAAC,CAAC;IACN;EAEJ,CAAC,EAAE,CAAEN,KAAK,CAAE,CAAC;EACb,oBACI;IAAK,SAAS,EAAC,yGAAyG;IAAA,WACnH,CAAEA,KAAK,CAACQ,OAAO,IAAIP,UAAU,CAACG,IAAI,iBAAI,QAAC,QAAQ;MAAA,GAAKH,UAAU,CAACG;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,EACtE,CAAEJ,KAAK,CAACO,QAAQ,IAAIN,UAAU,CAACG,IAAI,iBAAI,QAAC,SAAS;MAAA,GAAKH,UAAU,CAACG;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA;EAE7E;EAAA;AAER;AAAC,GApCeL,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}