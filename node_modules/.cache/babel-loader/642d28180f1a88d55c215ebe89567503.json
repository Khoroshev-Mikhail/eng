{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/Components/BreadCrumbp/BreadCrumb.tsx\";\nimport { Breadcrumb } from \"flowbite-react\";\nimport { HomeIcon } from '@heroicons/react/24/solid';\nimport useBreadcrumbs from \"use-react-router-breadcrumbs\";\nimport { Link } from \"react-router-dom\";\nimport { useGetGroupsQuery } from \"../../app/API/groupsAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const defaultRoutes = [{\n    path: \"/\",\n    breadcrumb: \"Главная\"\n  }, {\n    path: \"/texts\",\n    breadcrumb: \"Тексты\"\n  }, {\n    path: \"/words\",\n    breadcrumb: \"Слова\"\n  }, {\n    path: \"/words/:id/English\",\n    breadcrumb: \"Английский - Русский\"\n  }, {\n    path: \"/words/:id/Russian\",\n    breadcrumb: \"Русский - Английский\"\n  }, {\n    path: \"/words/:id/Spelling\",\n    breadcrumb: \"По буквам\"\n  }, {\n    path: \"/words/:id/Auding\",\n    breadcrumb: \"Аудирование\"\n  }, {\n    path: \"/Authorization\",\n    breadcrumb: \"Авторизация\"\n  }];\n  const {\n    data: groups = [],\n    isSuccess\n  } = useGetGroupsQuery();\n  const routesFromGroup = isSuccess ? groups.map(el => ({\n    path: String(el.id),\n    breadcrumb: el.title_rus\n  })) : [];\n  const routes = defaultRoutes.concat(routesFromGroup);\n  const breadcrumbs = useBreadcrumbs(routes);\n  return /*#__PURE__*/_jsxDEV(Breadcrumb, {\n    \"aria-label\": \"Default breadcrumb example\",\n    className: \"m-2 my-4\",\n    children: breadcrumbs.map(_ref => {\n      let {\n        breadcrumb,\n        match\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n        icon: match.pathname === '/' ? HomeIcon : undefined,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: match.pathname,\n          style: match.pathname === '/' ? {\n            minHeight: '21px',\n            paddingTop: '2px'\n          } : {},\n          children: [\" \", breadcrumb]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, match.pathname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["Breadcrumb","HomeIcon","useBreadcrumbs","Link","useGetGroupsQuery","defaultRoutes","path","breadcrumb","data","groups","isSuccess","routesFromGroup","map","el","String","id","title_rus","routes","concat","breadcrumbs","match","pathname","undefined","minHeight","paddingTop"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/BreadCrumbp/BreadCrumb.tsx"],"sourcesContent":["import { Breadcrumb } from \"flowbite-react\";\nimport { HomeIcon } from '@heroicons/react/24/solid'\nimport useBreadcrumbs from \"use-react-router-breadcrumbs\";\nimport {Link } from \"react-router-dom\";\nimport { useGetGroupsQuery } from \"../../app/API/groupsAPI\";\n\ntype RouteType = {\n    path: string,\n    breadcrumb: string\n}\n\nexport default function(){\n    const defaultRoutes = [\n        { path: \"/\", breadcrumb: \"Главная\" },\n        { path: \"/texts\", breadcrumb: \"Тексты\" },\n        { path: \"/words\", breadcrumb: \"Слова\" },\n        { path: \"/words/:id/English\", breadcrumb: \"Английский - Русский\" },\n        { path: \"/words/:id/Russian\", breadcrumb: \"Русский - Английский\" },\n        { path: \"/words/:id/Spelling\", breadcrumb: \"По буквам\" },\n        { path: \"/words/:id/Auding\", breadcrumb: \"Аудирование\" },\n        { path: \"/Authorization\", breadcrumb: \"Авторизация\" },\n      ];\n    const {data: groups = [], isSuccess} = useGetGroupsQuery()\n    const routesFromGroup: RouteType[] = isSuccess ? groups.map(el => ({path: String(el.id), breadcrumb: el.title_rus})) : []\n    const routes = defaultRoutes.concat(routesFromGroup)\n    const breadcrumbs = useBreadcrumbs(routes);\n    return (\n        <Breadcrumb aria-label=\"Default breadcrumb example\" className=\"m-2 my-4\">\n            {breadcrumbs.map(({ breadcrumb, match }) => {\n                return (\n                    <Breadcrumb.Item icon={match.pathname === '/' ? HomeIcon : undefined} key={match.pathname}>  \n                        <Link to={match.pathname} style={match.pathname === '/' ? {minHeight: '21px', paddingTop: '2px'} : {}}> {/* вылечи костыль! Первая крошка прыгает когда добавляется следующая потому что у первой высота 17.5 а у второй(стрелки) 21px */}\n                            {breadcrumb}\n                        </Link>{/* При клике страница перезагружается */}\n                    </Breadcrumb.Item>\n                )\n            })}\n            \n        </Breadcrumb>\n    )\n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAAQC,IAAI,QAAQ,kBAAkB;AACtC,SAASC,iBAAiB,QAAQ,yBAAyB;AAAC;AAO5D,eAAe,YAAU;EACrB,MAAMC,aAAa,GAAG,CAClB;IAAEC,IAAI,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAU,CAAC,EACpC;IAAED,IAAI,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAS,CAAC,EACxC;IAAED,IAAI,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAQ,CAAC,EACvC;IAAED,IAAI,EAAE,oBAAoB;IAAEC,UAAU,EAAE;EAAuB,CAAC,EAClE;IAAED,IAAI,EAAE,oBAAoB;IAAEC,UAAU,EAAE;EAAuB,CAAC,EAClE;IAAED,IAAI,EAAE,qBAAqB;IAAEC,UAAU,EAAE;EAAY,CAAC,EACxD;IAAED,IAAI,EAAE,mBAAmB;IAAEC,UAAU,EAAE;EAAc,CAAC,EACxD;IAAED,IAAI,EAAE,gBAAgB;IAAEC,UAAU,EAAE;EAAc,CAAC,CACtD;EACH,MAAM;IAACC,IAAI,EAAEC,MAAM,GAAG,EAAE;IAAEC;EAAS,CAAC,GAAGN,iBAAiB,EAAE;EAC1D,MAAMO,eAA4B,GAAGD,SAAS,GAAGD,MAAM,CAACG,GAAG,CAACC,EAAE,KAAK;IAACP,IAAI,EAAEQ,MAAM,CAACD,EAAE,CAACE,EAAE,CAAC;IAAER,UAAU,EAAEM,EAAE,CAACG;EAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACzH,MAAMC,MAAM,GAAGZ,aAAa,CAACa,MAAM,CAACP,eAAe,CAAC;EACpD,MAAMQ,WAAW,GAAGjB,cAAc,CAACe,MAAM,CAAC;EAC1C,oBACI,QAAC,UAAU;IAAC,cAAW,4BAA4B;IAAC,SAAS,EAAC,UAAU;IAAA,UACnEE,WAAW,CAACP,GAAG,CAAC,QAA2B;MAAA,IAA1B;QAAEL,UAAU;QAAEa;MAAM,CAAC;MACnC,oBACI,QAAC,UAAU,CAAC,IAAI;QAAC,IAAI,EAAEA,KAAK,CAACC,QAAQ,KAAK,GAAG,GAAGpB,QAAQ,GAAGqB,SAAU;QAAA,uBACjE,QAAC,IAAI;UAAC,EAAE,EAAEF,KAAK,CAACC,QAAS;UAAC,KAAK,EAAED,KAAK,CAACC,QAAQ,KAAK,GAAG,GAAG;YAACE,SAAS,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAK,CAAC,GAAG,CAAC,CAAE;UAAA,gBACjGjB,UAAU;QAAA;UAAA;UAAA;UAAA;QAAA;MACR,GAHgEa,KAAK,CAACC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAIvE;IAE1B,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEO;AAErB"},"metadata":{},"sourceType":"module"}