{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/Components/Methods/Russian/Russian.tsx\",\n  _s = $RefreshSig$();\nimport { Card, Image, Button } from 'semantic-ui-react';\nimport { useGetUnlernedQuery, useSetVocabularyMutation, useWrongAnswerMutation } from '../../../app/API/vocabulary';\nimport css from './russian.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Russian(props) {\n  _s();\n  const method = 'russian';\n  const userId = 1;\n  const {\n    data,\n    isSuccess\n  } = useGetUnlernedQuery({\n    userId,\n    method,\n    groupId: props.id\n  });\n  const [setVocabulary] = useSetVocabularyMutation();\n  const [wrongAnswer] = useWrongAnswerMutation();\n  const answer = id => {\n    if (data.trueVariant.id === id) {\n      setTimeout(() => setVocabulary({\n        userId,\n        method,\n        word_id: id\n      }), 1000);\n    } else {\n      wrongAnswer(1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isSuccess && /*#__PURE__*/_jsxDEV(Card, {\n      centered: true,\n      fluid: document.documentElement.clientWidth < 800 ? true : false,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        onClick: () => alert('repeat audio'),\n        src: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n        centered: true,\n        wrapped: true,\n        ui: false,\n        className: css.pointer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          textAlign: \"center\",\n          className: css.pointer,\n          children: data.trueVariant.rus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        children: data.falseVariant.map((el, i) => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => answer(el.id),\n            fluid: true,\n            basic: true,\n            color: \"green\",\n            size: \"huge\",\n            className: css.marginButtons,\n            children: el.eng\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(Russian, \"5B002+/uALqSnUIxMqnx9uYpSgg=\", false, function () {\n  return [useGetUnlernedQuery, useSetVocabularyMutation, useWrongAnswerMutation];\n});\n_c = Russian;\nvar _c;\n$RefreshReg$(_c, \"Russian\");","map":{"version":3,"names":["Card","Image","Button","useGetUnlernedQuery","useSetVocabularyMutation","useWrongAnswerMutation","css","Russian","props","method","userId","data","isSuccess","groupId","id","setVocabulary","wrongAnswer","answer","trueVariant","setTimeout","word_id","document","documentElement","clientWidth","alert","pointer","rus","falseVariant","map","el","i","marginButtons","eng"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/Methods/Russian/Russian.tsx"],"sourcesContent":["import { Card, Image, Button } from 'semantic-ui-react'\nimport { useGetUnlernedQuery, useSetVocabularyMutation, useWrongAnswerMutation } from '../../../app/API/vocabulary'\nimport { Word, Group} from '../../../app/types/types'\nimport css from './russian.module.css'\nexport default function Russian(props: Group){\n    const method = 'russian'\n    const userId = 1\n    const { data, isSuccess } = useGetUnlernedQuery({userId, method, groupId: props.id})\n    const [ setVocabulary ] = useSetVocabularyMutation()\n    const [ wrongAnswer ] = useWrongAnswerMutation()\n    const answer = (id: number) => {\n        if(data.trueVariant.id === id){\n            setTimeout(()=> setVocabulary({userId, method, word_id: id}), 1000)\n        } else{\n            wrongAnswer(1)\n        }\n    }\n    return(\n        <>\n            {isSuccess && \n                <Card centered fluid={document.documentElement.clientWidth < 800 ? true : false}>\n                    <Image onClick={()=>alert('repeat audio')} src='https://react.semantic-ui.com/images/avatar/large/matthew.png' centered wrapped ui={false} className={css.pointer}/>\n                    <Card.Content>\n                        <Card.Header textAlign='center' className={css.pointer}>{data.trueVariant.rus}</Card.Header>\n                    </Card.Content>\n                    <Card.Content>\n                        {data.falseVariant.map((el: Word, i: number) => {\n                            return (\n                                <Button onClick={()=>answer(el.id)} key={i} fluid basic color='green' size='huge' className={css.marginButtons}>\n                                    {el.eng}\n                                </Button>\n                            )\n                        })}\n                    </Card.Content>\n                </Card>\n            }\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,mBAAmB;AACvD,SAASC,mBAAmB,EAAEC,wBAAwB,EAAEC,sBAAsB,QAAQ,6BAA6B;AAEnH,OAAOC,GAAG,MAAM,sBAAsB;AAAA;AAAA;AACtC,eAAe,SAASC,OAAO,CAACC,KAAY,EAAC;EAAA;EACzC,MAAMC,MAAM,GAAG,SAAS;EACxB,MAAMC,MAAM,GAAG,CAAC;EAChB,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGT,mBAAmB,CAAC;IAACO,MAAM;IAAED,MAAM;IAAEI,OAAO,EAAEL,KAAK,CAACM;EAAE,CAAC,CAAC;EACpF,MAAM,CAAEC,aAAa,CAAE,GAAGX,wBAAwB,EAAE;EACpD,MAAM,CAAEY,WAAW,CAAE,GAAGX,sBAAsB,EAAE;EAChD,MAAMY,MAAM,GAAIH,EAAU,IAAK;IAC3B,IAAGH,IAAI,CAACO,WAAW,CAACJ,EAAE,KAAKA,EAAE,EAAC;MAC1BK,UAAU,CAAC,MAAKJ,aAAa,CAAC;QAACL,MAAM;QAAED,MAAM;QAAEW,OAAO,EAAEN;MAAE,CAAC,CAAC,EAAE,IAAI,CAAC;IACvE,CAAC,MAAK;MACFE,WAAW,CAAC,CAAC,CAAC;IAClB;EACJ,CAAC;EACD,oBACI;IAAA,UACKJ,SAAS,iBACN,QAAC,IAAI;MAAC,QAAQ;MAAC,KAAK,EAAES,QAAQ,CAACC,eAAe,CAACC,WAAW,GAAG,GAAG,GAAG,IAAI,GAAG,KAAM;MAAA,wBAC5E,QAAC,KAAK;QAAC,OAAO,EAAE,MAAIC,KAAK,CAAC,cAAc,CAAE;QAAC,GAAG,EAAC,+DAA+D;QAAC,QAAQ;QAAC,OAAO;QAAC,EAAE,EAAE,KAAM;QAAC,SAAS,EAAElB,GAAG,CAACmB;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eACpK,QAAC,IAAI,CAAC,OAAO;QAAA,uBACT,QAAC,IAAI,CAAC,MAAM;UAAC,SAAS,EAAC,QAAQ;UAAC,SAAS,EAAEnB,GAAG,CAACmB,OAAQ;UAAA,UAAEd,IAAI,CAACO,WAAW,CAACQ;QAAG;UAAA;UAAA;UAAA;QAAA;MAAe;QAAA;QAAA;QAAA;MAAA,QACjF,eACf,QAAC,IAAI,CAAC,OAAO;QAAA,UACRf,IAAI,CAACgB,YAAY,CAACC,GAAG,CAAC,CAACC,EAAQ,EAAEC,CAAS,KAAK;UAC5C,oBACI,QAAC,MAAM;YAAC,OAAO,EAAE,MAAIb,MAAM,CAACY,EAAE,CAACf,EAAE,CAAE;YAAS,KAAK;YAAC,KAAK;YAAC,KAAK,EAAC,OAAO;YAAC,IAAI,EAAC,MAAM;YAAC,SAAS,EAAER,GAAG,CAACyB,aAAc;YAAA,UAC1GF,EAAE,CAACG;UAAG,GAD8BF,CAAC;YAAA;YAAA;YAAA;UAAA,QAEjC;QAEjB,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACS;IAAA;MAAA;MAAA;MAAA;IAAA;EACZ,iBAEZ;AAEX;AAAC,GAlCuBvB,OAAO;EAAA,QAGCJ,mBAAmB,EACrBC,wBAAwB,EAC1BC,sBAAsB;AAAA;AAAA,KAL1BE,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}