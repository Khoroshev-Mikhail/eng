{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/Components/Texts/TextPage/TextPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReferences } from \"../../../app/API/referencesSlice\";\nimport { getOneTextThunk } from \"../../../app/API/textSliceAPI\";\nimport { useAppDispatch, useAppSelector } from \"../../../app/hooks/hooks\";\nimport { References } from \"../../References/References\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextPage() {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    id_text\n  } = useParams();\n  const text = useAppSelector(state => state.oneText);\n  const references = useAppSelector(state => state.references);\n  useEffect(() => {\n    if (id_text && +id_text !== text.id) {\n      dispatch(getOneTextThunk(id_text));\n      dispatch(getReferences({\n        item: 'texts',\n        id: id_text\n      }));\n    }\n  }, [id_text]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!text && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041A\\u0430\\u043A\\u0430\\u044F-\\u0442\\u043E \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), text && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [references && /*#__PURE__*/_jsxDEV(References, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: text.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: text.text_body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TextPage, \"tVxDqts/rNlk5MKzq/jRbjDgogQ=\", false, function () {\n  return [useAppDispatch, useParams, useAppSelector, useAppSelector];\n});\n_c = TextPage;\nvar _c;\n$RefreshReg$(_c, \"TextPage\");","map":{"version":3,"names":["useEffect","useParams","getReferences","getOneTextThunk","useAppDispatch","useAppSelector","References","TextPage","dispatch","id_text","text","state","oneText","references","id","item","title","text_body"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/Texts/TextPage/TextPage.tsx"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { getReferences } from \"../../../app/API/referencesSlice\"\nimport { getOneTextThunk } from \"../../../app/API/textSliceAPI\"\nimport { useAppDispatch, useAppSelector } from \"../../../app/hooks/hooks\"\nimport { RootState } from \"../../../app/store\"\nimport { References } from \"../../References/References\"\n\nexport default function TextPage(){\n    const dispatch = useAppDispatch()\n    const { id_text } = useParams()\n    const text = useAppSelector((state: RootState) => state.oneText)\n    const references = useAppSelector((state: RootState) => state.references)\n    useEffect(()=>{\n        if(id_text && +id_text !== text.id){\n            dispatch(getOneTextThunk(id_text))\n            dispatch(getReferences({item: 'texts', id: id_text}))\n        }\n    }, [id_text])\n    return(\n        <>  \n            {!text &&\n            <div>\n                <h1>Какая-то ошибка...</h1>\n            </div>\n            }\n            {text &&\n            <div>\n                {references && \n                    <References />\n                } \n                <h1>{text.title}</h1>\n                <div>{text.text_body}</div>\n            </div>\n            }\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,kCAAkC;AAChE,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,cAAc,EAAEC,cAAc,QAAQ,0BAA0B;AAEzE,SAASC,UAAU,QAAQ,6BAA6B;AAAA;AAAA;AAExD,eAAe,SAASC,QAAQ,GAAE;EAAA;EAC9B,MAAMC,QAAQ,GAAGJ,cAAc,EAAE;EACjC,MAAM;IAAEK;EAAQ,CAAC,GAAGR,SAAS,EAAE;EAC/B,MAAMS,IAAI,GAAGL,cAAc,CAAEM,KAAgB,IAAKA,KAAK,CAACC,OAAO,CAAC;EAChE,MAAMC,UAAU,GAAGR,cAAc,CAAEM,KAAgB,IAAKA,KAAK,CAACE,UAAU,CAAC;EACzEb,SAAS,CAAC,MAAI;IACV,IAAGS,OAAO,IAAI,CAACA,OAAO,KAAKC,IAAI,CAACI,EAAE,EAAC;MAC/BN,QAAQ,CAACL,eAAe,CAACM,OAAO,CAAC,CAAC;MAClCD,QAAQ,CAACN,aAAa,CAAC;QAACa,IAAI,EAAE,OAAO;QAAED,EAAE,EAAEL;MAAO,CAAC,CAAC,CAAC;IACzD;EACJ,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACb,oBACI;IAAA,WACK,CAACC,IAAI,iBACN;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA2B;MAAA;MAAA;MAAA;IAAA,QACzB,EAELA,IAAI,iBACL;MAAA,WACKG,UAAU,iBACP,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAElB;QAAA,UAAKH,IAAI,CAACM;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACrB;QAAA,UAAMN,IAAI,CAACO;MAAS;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA,gBAEP;AAEX;AAAC,GA7BuBV,QAAQ;EAAA,QACXH,cAAc,EACXH,SAAS,EAChBI,cAAc,EACRA,cAAc;AAAA;AAAA,KAJbE,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}