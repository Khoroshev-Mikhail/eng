{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/Components/Groups/GroupProgress.tsx\",\n  _s = $RefreshSig$();\nimport { Progress } from \"flowbite-react\";\nimport { useEffect, useState } from \"react\";\nimport { getVocabulary } from \"../../app/clientAPI/vocabularyAPI\";\nimport getGroupProgress from \"../../app/fns/groupFns\";\nimport { useAppSelector } from \"../../app/hooks/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GroupProgress(props) {\n  _s();\n  const vocabulary = useAppSelector(getVocabulary);\n  const [word_ids, setWord_ids] = useState([]);\n  const progress = getGroupProgress(vocabulary, word_ids);\n  useEffect(() => {\n    if (props.id_group) {\n      fetch(`http://localhost:3002/groups/${props.id_group}`).then(response => {\n        return response.json();\n      }).then(response => {\n        if (response.words) {\n          setWord_ids(response.words);\n        }\n      }).catch(err => {\n        setWord_ids([]);\n      });\n    }\n  }, [vocabulary, props.id_group]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"break-words !text-lg h-14 text-center text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",\n      children: [progress.total, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), !props.all && /*#__PURE__*/_jsxDEV(Progress, {\n      progress: progress.total,\n      color: \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), props.all && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pb-1\",\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          progress: progress.english,\n          color: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pb-1\",\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          progress: progress.russian,\n          color: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pb-1\",\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          progress: progress.spelling,\n          color: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pb-1\",\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          progress: progress.auding,\n          color: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(GroupProgress, \"khaeoqkL2U5u9ScRCuoszUalFc4=\", false, function () {\n  return [useAppSelector];\n});\n_c = GroupProgress;\nvar _c;\n$RefreshReg$(_c, \"GroupProgress\");","map":{"version":3,"names":["Progress","useEffect","useState","getVocabulary","getGroupProgress","useAppSelector","GroupProgress","props","vocabulary","word_ids","setWord_ids","progress","id_group","fetch","then","response","json","words","catch","err","total","all","english","russian","spelling","auding"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/Groups/GroupProgress.tsx"],"sourcesContent":["import { Progress } from \"flowbite-react\";\nimport { useEffect, useState } from \"react\";\nimport { getVocabulary } from \"../../app/clientAPI/vocabularyAPI\";\nimport getGroupProgress from \"../../app/fns/groupFns\";\nimport { useAppSelector } from \"../../app/hooks/hooks\";\n\nexport default function GroupProgress( props: { id_group: number | string | null, all?: boolean } ){\n    const vocabulary = useAppSelector(getVocabulary)\n    const [ word_ids, setWord_ids ] = useState<number[]>([])\n    const progress = getGroupProgress(vocabulary, word_ids)\n    useEffect(()=>{\n        if(props.id_group){\n            fetch(`http://localhost:3002/groups/${props.id_group}`)\n            .then( response => {\n                return response.json()\n            })\n            .then(response =>{\n                if(response.words){\n                    setWord_ids( response.words )\n                }\n            })\n            .catch(err => {\n                setWord_ids ( [] )\n            })\n        }\n    }, [ vocabulary, props.id_group ])\n    return (\n        <>  \n            <h6 className=\"break-words !text-lg h-14 text-center text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">\n                {progress.total}%\n            </h6>\n            {( !props.all ) && \n                <Progress progress={progress.total} color='dark'/>\n            }\n            {props.all &&\n                <>\n                    <div className='pb-1'><Progress progress={progress.english} color='dark'/></div>\n                    <div className='pb-1'><Progress progress={progress.russian} color='dark'/></div>\n                    <div className='pb-1'><Progress progress={progress.spelling} color='dark'/></div>\n                    <div className='pb-1'><Progress progress={progress.auding} color='dark'/></div>\n                </>\n            }\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,mCAAmC;AACjE,OAAOC,gBAAgB,MAAM,wBAAwB;AACrD,SAASC,cAAc,QAAQ,uBAAuB;AAAC;AAAA;AAEvD,eAAe,SAASC,aAAa,CAAEC,KAA0D,EAAE;EAAA;EAC/F,MAAMC,UAAU,GAAGH,cAAc,CAACF,aAAa,CAAC;EAChD,MAAM,CAAEM,QAAQ,EAAEC,WAAW,CAAE,GAAGR,QAAQ,CAAW,EAAE,CAAC;EACxD,MAAMS,QAAQ,GAAGP,gBAAgB,CAACI,UAAU,EAAEC,QAAQ,CAAC;EACvDR,SAAS,CAAC,MAAI;IACV,IAAGM,KAAK,CAACK,QAAQ,EAAC;MACdC,KAAK,CAAE,gCAA+BN,KAAK,CAACK,QAAS,EAAC,CAAC,CACtDE,IAAI,CAAEC,QAAQ,IAAI;QACf,OAAOA,QAAQ,CAACC,IAAI,EAAE;MAC1B,CAAC,CAAC,CACDF,IAAI,CAACC,QAAQ,IAAG;QACb,IAAGA,QAAQ,CAACE,KAAK,EAAC;UACdP,WAAW,CAAEK,QAAQ,CAACE,KAAK,CAAE;QACjC;MACJ,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACVT,WAAW,CAAG,EAAE,CAAE;MACtB,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAAEF,UAAU,EAAED,KAAK,CAACK,QAAQ,CAAE,CAAC;EAClC,oBACI;IAAA,wBACI;MAAI,SAAS,EAAC,uGAAuG;MAAA,WAChHD,QAAQ,CAACS,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACd,EACF,CAACb,KAAK,CAACc,GAAG,iBACT,QAAC,QAAQ;MAAC,QAAQ,EAAEV,QAAQ,CAACS,KAAM;MAAC,KAAK,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,EAErDb,KAAK,CAACc,GAAG,iBACN;MAAA,wBACI;QAAK,SAAS,EAAC,MAAM;QAAA,uBAAC,QAAC,QAAQ;UAAC,QAAQ,EAAEV,QAAQ,CAACW,OAAQ;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM,eAChF;QAAK,SAAS,EAAC,MAAM;QAAA,uBAAC,QAAC,QAAQ;UAAC,QAAQ,EAAEX,QAAQ,CAACY,OAAQ;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM,eAChF;QAAK,SAAS,EAAC,MAAM;QAAA,uBAAC,QAAC,QAAQ;UAAC,QAAQ,EAAEZ,QAAQ,CAACa,QAAS;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM,eACjF;QAAK,SAAS,EAAC,MAAM;QAAA,uBAAC,QAAC,QAAQ;UAAC,QAAQ,EAAEb,QAAQ,CAACc,MAAO;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA,gBAChF;EAAA,gBAER;AAEX;AAAC,GAtCuBnB,aAAa;EAAA,QACdD,cAAc;AAAA;AAAA,KADbC,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}