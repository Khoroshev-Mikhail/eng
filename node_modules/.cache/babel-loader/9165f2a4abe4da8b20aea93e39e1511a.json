{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function References(props) {\n  _s();\n  const [references, setReferences] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  // Здесь отдельно карточки с грамматикой если есть\n  ;\n}\n_s(References, \"ZiS/vxELln42k9bgRQ49nARbmA8=\");\n_c = References;\nvar _c;\n$RefreshReg$(_c, \"References\");","map":{"version":3,"names":["useState","References","props","references","setReferences"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/References/References.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { WORD_IDS } from \"../../app/variables/dbVariables\";\n\nexport function References(props : { groupId?: number, textId?: number, audioId?: number, videoId?: number}){\n    const [ references, setReferences ] = useState()\n    \n    return (\n        <>\n            {/* {! props.groupId && <GroupCard />} */}\n            {/* {! props.textId && <TextCard />} */}\n            {/* {! props.audioId && <GroupCard />} */}\n            {/* {! props.videoId && <GroupCard />} */}\n\n        </>\n        // Здесь отдельно карточки с грамматикой если есть\n    )\n}"],"mappings":";AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAG5C,OAAO,SAASC,UAAU,CAACC,KAAgF,EAAC;EAAA;EACxG,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAE,GAAGJ,QAAQ,EAAE;EAEhD,oBACI;EAOA;EAAA;AAER;AAAC,GAbeC,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}