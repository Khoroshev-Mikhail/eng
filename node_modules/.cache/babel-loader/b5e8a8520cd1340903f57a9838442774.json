{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/AdminComponents/AdminWords/AdminWords.tsx\",\n  _s = $RefreshSig$();\nimport { Table } from \"flowbite-react\";\nimport { useState } from \"react\";\nimport { useGetAllWordsQuery } from \"../../app/API/wordAPI\";\nimport AdminWordsRow from \"./AdminWordsRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortById = (a, b) => a.id - b.id;\nconst sortByEng = (a, b) => a.eng.localeCompare(b.eng);\nconst sortByRus = (a, b) => a.rus.localeCompare(b.rus);\nexport default function AdminWords() {\n  _s();\n  const {\n    data,\n    isSuccess\n  } = useGetAllWordsQuery();\n  const [comparator, setComparator] = useState({\n    fn: sortById,\n    increase: true\n  });\n  const [filter, setFilter] = useState('');\n  const sorted = isSuccess ? comparator.increase ? [...data].sort(comparator.fn).filter(el => el.eng.includes(filter) || el.rus.includes(filter)) : [...data].sort(comparator.fn).filter(el => el.eng.includes(filter) || el.rus.includes(filter)).reverse() : [];\n  function toggleComparator(currentComparator) {\n    setComparator(_ref => {\n      let {\n        fn,\n        increase\n      } = _ref;\n      return {\n        fn: currentComparator,\n        increase: fn === currentComparator ? !increase : true\n      };\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Table, {\n    hoverable: true,\n    children: [/*#__PURE__*/_jsxDEV(Table.Head, {\n      children: [/*#__PURE__*/_jsxDEV(Table.HeadCell, {\n        onClick: () => toggleComparator(sortById),\n        className: \"text-center !px-2 cursor-pointer\",\n        children: \"ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n        onClick: () => toggleComparator(sortByEng),\n        className: \"cursor-pointer\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n        onClick: () => toggleComparator(sortByRus),\n        className: \"cursor-pointer\",\n        children: \"Russian\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n        className: \"text-center\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n      className: \"divide-y\",\n      children: [/*#__PURE__*/_jsxDEV(Table.Row, {\n        className: \"bg-white dark:border-gray-700 dark:bg-gray-800\",\n        children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n          colSpan: 4,\n          className: \"!p-4 !px-2 !pl-5\",\n          children: \"\\u0447\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), isSuccess && sorted.map((word, i) => {\n        return /*#__PURE__*/_jsxDEV(AdminWordsRow, {\n          ...word\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminWords, \"zf+1S9k3IAHS5ouwg1Dwox3rVGw=\", false, function () {\n  return [useGetAllWordsQuery];\n});\n_c = AdminWords;\nvar _c;\n$RefreshReg$(_c, \"AdminWords\");","map":{"version":3,"names":["Table","useState","useGetAllWordsQuery","AdminWordsRow","sortById","a","b","id","sortByEng","eng","localeCompare","sortByRus","rus","AdminWords","data","isSuccess","comparator","setComparator","fn","increase","filter","setFilter","sorted","sort","el","includes","reverse","toggleComparator","currentComparator","map","word","i"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/AdminComponents/AdminWords/AdminWords.tsx"],"sourcesContent":["import { Table } from \"flowbite-react\"\nimport { useState } from \"react\"\nimport { useGetAllWordsQuery } from \"../../app/API/wordAPI\"\nimport { Word } from \"../../app/types/types\"\nimport AdminWordsRow from \"./AdminWordsRow\"\n\nconst sortById = (a: Word, b: Word) => a.id - b.id\nconst sortByEng = (a: Word, b: Word) => a.eng.localeCompare(b.eng)\nconst sortByRus = (a: Word, b: Word) => a.rus.localeCompare(b.rus)\n\nexport default function AdminWords(){\n    const {data, isSuccess} = useGetAllWordsQuery()\n    const [comparator, setComparator] = useState<{fn: any, increase: boolean}>({fn: sortById, increase: true})\n    const [filter, setFilter] = useState<string>('')\n    const sorted = isSuccess \n        ? comparator.increase \n            ? [...data].sort(comparator.fn).filter(el => el.eng.includes(filter) || el.rus.includes(filter)) \n            : [...data].sort(comparator.fn).filter(el => el.eng.includes(filter) || el.rus.includes(filter)).reverse()\n        : []\n    function toggleComparator(currentComparator: any){\n        setComparator(({fn, increase}) => {\n            return {\n                fn: currentComparator,\n                increase: fn === currentComparator ? !increase : true\n            };\n        })\n    }\n    return (\n        <Table hoverable={true}>\n            <Table.Head>\n                <Table.HeadCell onClick={()=>toggleComparator(sortById)} className=\"text-center !px-2 cursor-pointer\">ID</Table.HeadCell>\n                <Table.HeadCell onClick={()=>toggleComparator(sortByEng)} className=\"cursor-pointer\">English</Table.HeadCell>\n                <Table.HeadCell onClick={()=>toggleComparator(sortByRus)} className=\"cursor-pointer\">Russian</Table.HeadCell>\n                <Table.HeadCell className=\"text-center\">Delete</Table.HeadCell>\n            </Table.Head>\n            <Table.Body className=\"divide-y\">\n            <Table.Row className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\n                <Table.Cell colSpan={4} className=\"!p-4 !px-2 !pl-5\">\n                    Ñ‡\n                </Table.Cell>\n\n            </Table.Row>\n                {isSuccess && \n                sorted.map((word: Word, i: number) => {\n                        return (\n                            <AdminWordsRow key={i} {...word}/>\n                        )\n                    })\n                }\n            </Table.Body>\n        </Table>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}