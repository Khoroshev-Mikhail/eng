{"ast":null,"code":"export default function getGroupProgress(vocabulary, word_ids) {\n  console.log(vocabulary, word_ids);\n  if (!vocabulary || !word_ids || !Array.isArray(word_ids)) {\n    return {\n      english: 0,\n      russian: 0,\n      spelling: 0,\n      auding: 0,\n      total: 0\n    };\n  }\n  const {\n    english,\n    russian,\n    spelling,\n    auding\n  } = vocabulary;\n  const count = word_ids.length;\n  const englishProgress = word_ids.filter(id => english.includes(id));\n  const russianProgress = word_ids.filter(id => russian.includes(id));\n  const spellingProgress = word_ids.filter(id => spelling.includes(id));\n  const audingProgress = word_ids.filter(id => auding.includes(id));\n  const totalProgress = word_ids.filter(id => englishProgress.includes(id) && russian.includes(id) && spelling.includes(id) && auding.includes(id));\n  return {\n    english: Math.round(englishProgress.length / count * 100),\n    russian: Math.round(russianProgress.length / count * 100),\n    spelling: Math.round(spellingProgress.length / count * 100),\n    auding: Math.round(audingProgress.length / count * 100),\n    total: Math.round(totalProgress.length / count * 100)\n  };\n}","map":{"version":3,"names":["getGroupProgress","vocabulary","word_ids","console","log","Array","isArray","english","russian","spelling","auding","total","count","length","englishProgress","filter","id","includes","russianProgress","spellingProgress","audingProgress","totalProgress","Math","round"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/app/fns/groupFns.ts"],"sourcesContent":["import { Vocabulary } from \"../types/types\";\n\nexport default function getGroupProgress(vocabulary: Vocabulary, word_ids: number[]){\n    console.log(vocabulary, word_ids)\n    if(! vocabulary || ! word_ids || ! Array.isArray(word_ids)){\n        return {\n            english: 0,\n            russian: 0,\n            spelling: 0,\n            auding: 0,\n            total: 0,\n        }\n    }\n    const { english, russian, spelling, auding } = vocabulary\n    const count = word_ids.length\n    const englishProgress = word_ids.filter(id => english.includes(id))\n    const russianProgress = word_ids.filter(id => russian.includes(id))\n    const spellingProgress = word_ids.filter(id => spelling.includes(id))\n    const audingProgress = word_ids.filter(id => auding.includes(id))\n    const totalProgress = word_ids.filter(id => englishProgress.includes(id) && russian.includes(id) && spelling.includes(id) && auding.includes(id))\n    return { \n        english: Math.round(englishProgress.length / count * 100),\n        russian: Math.round(russianProgress.length / count * 100),\n        spelling: Math.round(spellingProgress.length / count * 100),\n        auding: Math.round(audingProgress.length / count * 100),\n        total: Math.round(totalProgress.length / count * 100),\n    }\n}"],"mappings":"AAEA,eAAe,SAASA,gBAAgB,CAACC,UAAsB,EAAEC,QAAkB,EAAC;EAChFC,OAAO,CAACC,GAAG,CAACH,UAAU,EAAEC,QAAQ,CAAC;EACjC,IAAG,CAAED,UAAU,IAAI,CAAEC,QAAQ,IAAI,CAAEG,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAC;IACvD,OAAO;MACHK,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,CAAC;MACXC,MAAM,EAAE,CAAC;MACTC,KAAK,EAAE;IACX,CAAC;EACL;EACA,MAAM;IAAEJ,OAAO;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAGT,UAAU;EACzD,MAAMW,KAAK,GAAGV,QAAQ,CAACW,MAAM;EAC7B,MAAMC,eAAe,GAAGZ,QAAQ,CAACa,MAAM,CAACC,EAAE,IAAIT,OAAO,CAACU,QAAQ,CAACD,EAAE,CAAC,CAAC;EACnE,MAAME,eAAe,GAAGhB,QAAQ,CAACa,MAAM,CAACC,EAAE,IAAIR,OAAO,CAACS,QAAQ,CAACD,EAAE,CAAC,CAAC;EACnE,MAAMG,gBAAgB,GAAGjB,QAAQ,CAACa,MAAM,CAACC,EAAE,IAAIP,QAAQ,CAACQ,QAAQ,CAACD,EAAE,CAAC,CAAC;EACrE,MAAMI,cAAc,GAAGlB,QAAQ,CAACa,MAAM,CAACC,EAAE,IAAIN,MAAM,CAACO,QAAQ,CAACD,EAAE,CAAC,CAAC;EACjE,MAAMK,aAAa,GAAGnB,QAAQ,CAACa,MAAM,CAACC,EAAE,IAAIF,eAAe,CAACG,QAAQ,CAACD,EAAE,CAAC,IAAIR,OAAO,CAACS,QAAQ,CAACD,EAAE,CAAC,IAAIP,QAAQ,CAACQ,QAAQ,CAACD,EAAE,CAAC,IAAIN,MAAM,CAACO,QAAQ,CAACD,EAAE,CAAC,CAAC;EACjJ,OAAO;IACHT,OAAO,EAAEe,IAAI,CAACC,KAAK,CAACT,eAAe,CAACD,MAAM,GAAGD,KAAK,GAAG,GAAG,CAAC;IACzDJ,OAAO,EAAEc,IAAI,CAACC,KAAK,CAACL,eAAe,CAACL,MAAM,GAAGD,KAAK,GAAG,GAAG,CAAC;IACzDH,QAAQ,EAAEa,IAAI,CAACC,KAAK,CAACJ,gBAAgB,CAACN,MAAM,GAAGD,KAAK,GAAG,GAAG,CAAC;IAC3DF,MAAM,EAAEY,IAAI,CAACC,KAAK,CAACH,cAAc,CAACP,MAAM,GAAGD,KAAK,GAAG,GAAG,CAAC;IACvDD,KAAK,EAAEW,IAAI,CAACC,KAAK,CAACF,aAAa,CAACR,MAAM,GAAGD,KAAK,GAAG,GAAG;EACxD,CAAC;AACL"},"metadata":{},"sourceType":"module"}