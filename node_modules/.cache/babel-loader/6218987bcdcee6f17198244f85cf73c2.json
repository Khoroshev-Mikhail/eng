{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { WORD_IDS } from \"../../app/variables/dbVariables\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function References(props) {\n  _s();\n  useEffect(() => {\n    fetch(`http://localhost:3002/groups/${props.groupId || props.textId || props.audioId || props.videoId}/references`).then(response => {\n      return response.json();\n    }).then(response => {\n      if (response && response.hasOwnProperty(WORD_IDS)) {}\n    }).catch(err => {});\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  // Здесь отдельно карточки с грамматикой если есть\n  ;\n}\n_s(References, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = References;\nvar _c;\n$RefreshReg$(_c, \"References\");","map":{"version":3,"names":["useEffect","WORD_IDS","References","props","fetch","groupId","textId","audioId","videoId","then","response","json","hasOwnProperty","catch","err"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/References/References.tsx"],"sourcesContent":["import GroupCard from \"../Groups/GroupCard\";\nimport TextCard from \"../Texts/TextCard\";\nimport { Progress } from \"flowbite-react\";\nimport { useEffect, useState } from \"react\";\nimport { getVocabulary } from \"../../app/clientAPI/vocabularyAPI\";\nimport getGroupProgress from \"../../app/fns/groupFns\";\nimport { useAppSelector } from \"../../app/hooks/hooks\";\nimport { WORD_IDS } from \"../../app/variables/dbVariables\";\n\nexport function References(props : { groupId?: number, textId?: number, audioId?: number, videoId?: number}){\n    useEffect(()=>{\n        fetch(`http://localhost:3002/groups/${props.groupId || props.textId || props.audioId || props.videoId}/references`)\n        .then( response => {\n            return response.json()\n        })\n        .then(response =>{\n            if(response && response.hasOwnProperty(WORD_IDS)){\n                \n            }\n        })\n        .catch(err => {\n           \n        })\n    }, [props])\n    return (\n        <>\n            {/* {! props.groupId && <GroupCard />} */}\n            {/* {! props.textId && <TextCard />} */}\n            {/* {! props.audioId && <GroupCard />} */}\n            {/* {! props.videoId && <GroupCard />} */}\n\n        </>\n        // Здесь отдельно карточки с грамматикой если есть\n    )\n}"],"mappings":";AAGA,SAASA,SAAS,QAAkB,OAAO;AAI3C,SAASC,QAAQ,QAAQ,iCAAiC;AAAC;AAAA;AAE3D,OAAO,SAASC,UAAU,CAACC,KAAgF,EAAC;EAAA;EACxGH,SAAS,CAAC,MAAI;IACVI,KAAK,CAAE,gCAA+BD,KAAK,CAACE,OAAO,IAAIF,KAAK,CAACG,MAAM,IAAIH,KAAK,CAACI,OAAO,IAAIJ,KAAK,CAACK,OAAQ,aAAY,CAAC,CAClHC,IAAI,CAAEC,QAAQ,IAAI;MACf,OAAOA,QAAQ,CAACC,IAAI,EAAE;IAC1B,CAAC,CAAC,CACDF,IAAI,CAACC,QAAQ,IAAG;MACb,IAAGA,QAAQ,IAAIA,QAAQ,CAACE,cAAc,CAACX,QAAQ,CAAC,EAAC,CAEjD;IACJ,CAAC,CAAC,CACDY,KAAK,CAACC,GAAG,IAAI,CAEd,CAAC,CAAC;EACN,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;EACX,oBACI;EAOA;EAAA;AAER;AAAC,GAzBeD,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}