{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/AdminComponents/AdminWords/AdminWords.tsx\",\n  _s = $RefreshSig$();\nimport { Table, TextInput } from \"flowbite-react\";\nimport { useState } from \"react\";\nimport { useGetAllWordsQuery } from \"../../app/API/wordAPI\";\nimport AdminWordsRow from \"./AdminWordsRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortById = (a, b) => a.id - b.id;\nconst sortByEng = (a, b) => a.eng.localeCompare(b.eng);\nconst sortByRus = (a, b) => a.rus.localeCompare(b.rus);\nexport default function AdminWords() {\n  _s();\n  const {\n    data,\n    isSuccess\n  } = useGetAllWordsQuery();\n  const [comparator, setComparator] = useState({\n    fn: sortById,\n    increase: true\n  });\n  const [filter, setFilter] = useState('');\n  const sorted = isSuccess ? comparator.increase ? [...data].sort(comparator.fn).filter(el => el.eng.toLowerCase().includes(filter.toLowerCase()) || el.rus.toLowerCase().includes(filter.toLowerCase())) : [...data].sort(comparator.fn).filter(el => el.eng.toLowerCase().includes(filter.toLowerCase()) || el.rus.toLowerCase().includes(filter.toLowerCase())).reverse() : [];\n  function toggleComparator(currentComparator) {\n    setComparator(_ref => {\n      let {\n        fn,\n        increase\n      } = _ref;\n      return {\n        fn: currentComparator,\n        increase: fn === currentComparator ? !increase : true\n      };\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4\",\n      children: /*#__PURE__*/_jsxDEV(TextInput, {\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n        value: filter,\n        onChange: e => setFilter(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n        value: filter,\n        onChange: e => setFilter(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A\",\n        value: filter,\n        onChange: e => setFilter(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      hoverable: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Head, {\n        children: [/*#__PURE__*/_jsxDEV(Table.HeadCell, {\n          onClick: () => toggleComparator(sortById),\n          className: \"text-center !px-2 cursor-pointer\",\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n          onClick: () => toggleComparator(sortByEng),\n          className: \"cursor-pointer\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n          onClick: () => toggleComparator(sortByRus),\n          className: \"cursor-pointer\",\n          children: \"Russian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n          className: \"text-center\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        className: \"divide-y\",\n        children: isSuccess && sorted.map((word, i) => {\n          return /*#__PURE__*/_jsxDEV(AdminWordsRow, {\n            ...word\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminWords, \"zf+1S9k3IAHS5ouwg1Dwox3rVGw=\", false, function () {\n  return [useGetAllWordsQuery];\n});\n_c = AdminWords;\nvar _c;\n$RefreshReg$(_c, \"AdminWords\");","map":{"version":3,"names":["Table","TextInput","useState","useGetAllWordsQuery","AdminWordsRow","sortById","a","b","id","sortByEng","eng","localeCompare","sortByRus","rus","AdminWords","data","isSuccess","comparator","setComparator","fn","increase","filter","setFilter","sorted","sort","el","toLowerCase","includes","reverse","toggleComparator","currentComparator","e","target","value","map","word","i"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/AdminComponents/AdminWords/AdminWords.tsx"],"sourcesContent":["import { Table, TextInput } from \"flowbite-react\"\nimport { useState } from \"react\"\nimport { useGetAllWordsQuery } from \"../../app/API/wordAPI\"\nimport { Word } from \"../../app/types/types\"\nimport AdminWordsRow from \"./AdminWordsRow\"\n\nconst sortById = (a: Word, b: Word) => a.id - b.id\nconst sortByEng = (a: Word, b: Word) => a.eng.localeCompare(b.eng)\nconst sortByRus = (a: Word, b: Word) => a.rus.localeCompare(b.rus)\n\nexport default function AdminWords(){\n    const {data, isSuccess} = useGetAllWordsQuery()\n    const [comparator, setComparator] = useState<{fn: any, increase: boolean}>({fn: sortById, increase: true})\n    const [filter, setFilter] = useState<string>('')\n    const sorted = isSuccess \n        ? comparator.increase \n            ? [...data].sort(comparator.fn).filter(el => el.eng.toLowerCase().includes(filter.toLowerCase()) || el.rus.toLowerCase().includes(filter.toLowerCase())) \n            : [...data].sort(comparator.fn).filter(el => el.eng.toLowerCase().includes(filter.toLowerCase()) || el.rus.toLowerCase().includes(filter.toLowerCase())).reverse()\n        : []\n    function toggleComparator(currentComparator: any){\n        setComparator(({fn, increase}) => {\n            return {\n                fn: currentComparator,\n                increase: fn === currentComparator ? !increase : true\n            };\n        })\n    }\n    return (\n        <div> \n            <div className=\"my-4\">\n                <TextInput placeholder=\"Поиск\" value={filter} onChange={(e)=>setFilter(e.target.value)}/>\n            </div>\n            <div className=\"my-4\">\n                <TextInput placeholder=\"Поиск\" value={filter} onChange={(e)=>setFilter(e.target.value)}/>\n                <TextInput placeholder=\"Поиск\" value={filter} onChange={(e)=>setFilter(e.target.value)}/>\n            </div>\n            <Table hoverable={true}>\n                <Table.Head>\n                    <Table.HeadCell onClick={()=>toggleComparator(sortById)} className=\"text-center !px-2 cursor-pointer\">ID</Table.HeadCell>\n                    <Table.HeadCell onClick={()=>toggleComparator(sortByEng)} className=\"cursor-pointer\">English</Table.HeadCell>\n                    <Table.HeadCell onClick={()=>toggleComparator(sortByRus)} className=\"cursor-pointer\">Russian</Table.HeadCell>\n                    <Table.HeadCell className=\"text-center\">Delete</Table.HeadCell>\n                </Table.Head>\n                <Table.Body className=\"divide-y\">\n                    {isSuccess && \n                    sorted.map((word: Word, i: number) => {\n                            return (\n                                <AdminWordsRow key={i} {...word}/>\n                            )\n                        })\n                    }\n                </Table.Body>\n            </Table>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}