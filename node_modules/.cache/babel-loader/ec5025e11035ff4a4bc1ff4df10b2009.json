{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/Components/GroupCard/GroupCard.tsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { Progress } from 'flowbite-react';\nimport { useGetGroupProgessQuery } from '../../app/API/vocabularyAPI';\nimport { useAppSelector } from '../../app/hooks/hooks';\nimport { getUserId } from '../../app/clientAPI/userAPI';\nimport { getVocabulary } from '../../app/clientAPI/vocabularyAPI';\nimport getGroupProgress from '../../app/fns/groupFns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GroupCard(props) {\n  _s();\n  const userId = useAppSelector(getUserId);\n  const vocabulary = useAppSelector(getVocabulary);\n  const {\n    data: progress,\n    isSuccess: isSuccessProgress\n  } = useGetGroupProgessQuery({\n    userId,\n    groupId: props.id\n  });\n  const progress2 = getGroupProgress(vocabulary, props.word_ids);\n  console.log(progress2);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/words/${props.id}`,\n    className: \"block p-6 bg-white rounded-lg border border-gray-200 shadow-md hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"break-words !text-lg h-16 text-center mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",\n      children: props.title_rus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), isSuccessProgress && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"break-words !text-lg h-14 text-center text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",\n        children: [progress.total, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pb-1\",\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          progress: progress.english,\n          color: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pb-1\",\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          progress: progress.russian,\n          color: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pb-1\",\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          progress: progress.spelling,\n          color: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pb-1\",\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          progress: progress.auding,\n          color: \"dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(GroupCard, \"PTqVQlO8eVa349V/H9aD9uX+TPo=\", false, function () {\n  return [useAppSelector, useAppSelector, useGetGroupProgessQuery];\n});\n_c = GroupCard;\nvar _c;\n$RefreshReg$(_c, \"GroupCard\");","map":{"version":3,"names":["Link","Progress","useGetGroupProgessQuery","useAppSelector","getUserId","getVocabulary","getGroupProgress","GroupCard","props","userId","vocabulary","data","progress","isSuccess","isSuccessProgress","groupId","id","progress2","word_ids","console","log","title_rus","total","english","russian","spelling","auding"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/GroupCard/GroupCard.tsx"],"sourcesContent":["import { Link } from 'react-router-dom'\nimport { Progress } from 'flowbite-react';\nimport { Group, GroupTitle } from '../../app/types/types';\nimport { useGetGroupProgessQuery } from '../../app/API/vocabularyAPI';\nimport { useAppSelector } from '../../app/hooks/hooks';\nimport { RootState } from '../../app/store';\nimport { getUserId } from '../../app/clientAPI/userAPI';\nimport { getVocabulary } from '../../app/clientAPI/vocabularyAPI';\nimport getGroupProgress from '../../app/fns/groupFns';\n  \nexport default function GroupCard(props: Group){\n    const userId = useAppSelector(getUserId)\n    const vocabulary = useAppSelector(getVocabulary)\n    const { data: progress, isSuccess: isSuccessProgress } = useGetGroupProgessQuery({userId, groupId: props.id})\n    const progress2 = getGroupProgress(vocabulary, props.word_ids)\n    console.log(progress2)\n    return (\n        <Link to={`/words/${props.id}`} className=\"block p-6 bg-white rounded-lg border border-gray-200 shadow-md hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\">\n            <h6 className=\"break-words !text-lg h-16 text-center mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">\n                {props.title_rus}\n            </h6>\n            {\n            isSuccessProgress &&\n            <>\n                <h6 className=\"break-words !text-lg h-14 text-center text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">\n                    {progress.total}%\n                </h6>\n                <div className='pb-1'><Progress progress={progress.english} color='dark'/></div>\n                <div className='pb-1'><Progress progress={progress.russian} color='dark'/></div>\n                <div className='pb-1'><Progress progress={progress.spelling} color='dark'/></div>\n                <div className='pb-1'><Progress progress={progress.auding} color='dark'/></div>\n            </>\n            }\n            \n        </Link>    \n    )\n}"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,SAASC,uBAAuB,QAAQ,6BAA6B;AACrE,SAASC,cAAc,QAAQ,uBAAuB;AAEtD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,aAAa,QAAQ,mCAAmC;AACjE,OAAOC,gBAAgB,MAAM,wBAAwB;AAAC;AAAA;AAEtD,eAAe,SAASC,SAAS,CAACC,KAAY,EAAC;EAAA;EAC3C,MAAMC,MAAM,GAAGN,cAAc,CAACC,SAAS,CAAC;EACxC,MAAMM,UAAU,GAAGP,cAAc,CAACE,aAAa,CAAC;EAChD,MAAM;IAAEM,IAAI,EAAEC,QAAQ;IAAEC,SAAS,EAAEC;EAAkB,CAAC,GAAGZ,uBAAuB,CAAC;IAACO,MAAM;IAAEM,OAAO,EAAEP,KAAK,CAACQ;EAAE,CAAC,CAAC;EAC7G,MAAMC,SAAS,GAAGX,gBAAgB,CAACI,UAAU,EAAEF,KAAK,CAACU,QAAQ,CAAC;EAC9DC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EACtB,oBACI,QAAC,IAAI;IAAC,EAAE,EAAG,UAAST,KAAK,CAACQ,EAAG,EAAE;IAAC,SAAS,EAAC,+IAA+I;IAAA,wBACrL;MAAI,SAAS,EAAC,4GAA4G;MAAA,UACrHR,KAAK,CAACa;IAAS;MAAA;MAAA;MAAA;IAAA,QACf,EAELP,iBAAiB,iBACjB;MAAA,wBACI;QAAI,SAAS,EAAC,uGAAuG;QAAA,WAChHF,QAAQ,CAACU,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACd,eACL;QAAK,SAAS,EAAC,MAAM;QAAA,uBAAC,QAAC,QAAQ;UAAC,QAAQ,EAAEV,QAAQ,CAACW,OAAQ;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM,eAChF;QAAK,SAAS,EAAC,MAAM;QAAA,uBAAC,QAAC,QAAQ;UAAC,QAAQ,EAAEX,QAAQ,CAACY,OAAQ;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM,eAChF;QAAK,SAAS,EAAC,MAAM;QAAA,uBAAC,QAAC,QAAQ;UAAC,QAAQ,EAAEZ,QAAQ,CAACa,QAAS;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM,eACjF;QAAK,SAAS,EAAC,MAAM;QAAA,uBAAC,QAAC,QAAQ;UAAC,QAAQ,EAAEb,QAAQ,CAACc,MAAO;UAAC,KAAK,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA,gBAChF;EAAA;IAAA;IAAA;IAAA;EAAA,QAGA;AAEf;AAAC,GA1BuBnB,SAAS;EAAA,QACdJ,cAAc,EACVA,cAAc,EACwBD,uBAAuB;AAAA;AAAA,KAH5DK,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}