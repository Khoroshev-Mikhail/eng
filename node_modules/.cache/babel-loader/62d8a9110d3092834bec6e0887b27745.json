{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/Components/Texts/TextGrid/TextsGrid.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { getAllGlobalTextsTitlesThunk } from \"../../../app/clientAPI/textSliceAPI\";\nimport { useAppDispatch, useAppSelector } from \"../../../app/hooks/hooks\";\nimport TextCard from \"../TextCard\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Texts() {\n  _s();\n  const dispatch = useAppDispatch();\n  const texts = useAppSelector(state => state.texts);\n  useEffect(() => {\n    dispatch(getAllGlobalTextsTitlesThunk());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-5\",\n    children: [texts && texts.map((el, i) => {\n      return /*#__PURE__*/_createElement(TextCard, {\n        ...el,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 24\n        }\n      });\n    }), !texts || texts.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041A\\u0430\\u043A\\u0430\\u044F-\\u0442\\u043E \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(Texts, \"Uzve4SemJ6N8IIAvPk2H34pxaOc=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = Texts;\nvar _c;\n$RefreshReg$(_c, \"Texts\");","map":{"version":3,"names":["useEffect","getAllGlobalTextsTitlesThunk","useAppDispatch","useAppSelector","TextCard","Texts","dispatch","texts","state","map","el","i","length"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/Texts/TextGrid/TextsGrid.tsx"],"sourcesContent":["import { useEffect } from \"react\"\nimport { getAllGlobalTextsTitlesThunk } from \"../../../app/clientAPI/textSliceAPI\"\nimport { useAppDispatch, useAppSelector } from \"../../../app/hooks/hooks\"\nimport { RootState } from \"../../../app/store\"\nimport { TextTitle } from \"../../../app/types/types\"\nimport TextCard from \"../TextCard\"\n\nexport default function Texts(){\n    const dispatch = useAppDispatch()\n    const texts = useAppSelector((state: RootState) => state.texts)\n    useEffect(()=>{\n        dispatch(getAllGlobalTextsTitlesThunk())\n    }, [])\n    return (\n        <div className='grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-5'>\n            {texts && texts.map((el: TextTitle, i: number) => {\n                return <TextCard {...el} key={i} />\n            })}\n            {!texts || texts.length === 0 &&\n            <div>\n                <h1>Какая-то ошибка...</h1>\n            </div>}\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,4BAA4B,QAAQ,qCAAqC;AAClF,SAASC,cAAc,EAAEC,cAAc,QAAQ,0BAA0B;AAGzE,OAAOC,QAAQ,MAAM,aAAa;AAAA;AAAA;AAElC,eAAe,SAASC,KAAK,GAAE;EAAA;EAC3B,MAAMC,QAAQ,GAAGJ,cAAc,EAAE;EACjC,MAAMK,KAAK,GAAGJ,cAAc,CAAEK,KAAgB,IAAKA,KAAK,CAACD,KAAK,CAAC;EAC/DP,SAAS,CAAC,MAAI;IACVM,QAAQ,CAACL,4BAA4B,EAAE,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EACN,oBACI;IAAK,SAAS,EAAC,oGAAoG;IAAA,WAC9GM,KAAK,IAAIA,KAAK,CAACE,GAAG,CAAC,CAACC,EAAa,EAAEC,CAAS,KAAK;MAC9C,oBAAO,eAAC,QAAQ;QAAA,GAAKD,EAAE;QAAE,GAAG,EAAEC,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG;IACvC,CAAC,CAAC,EACD,CAACJ,KAAK,IAAIA,KAAK,CAACK,MAAM,KAAK,CAAC,iBAC7B;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA2B;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAjBuBP,KAAK;EAAA,QACRH,cAAc,EACjBC,cAAc;AAAA;AAAA,KAFRE,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}