{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  english: [],\n  russian: [],\n  spelling: [],\n  auding: []\n};\nexport const getVocabularyThunk = createAsyncThunk('Thunk: getVocabulary', async function (_, thunkAPI) {\n  const {\n    user\n  } = thunkAPI.getState();\n  console.log('userId thunk', user);\n  const response = await fetch(`http://localhost:3002/vocabulary/${user.id}`);\n  const data = await response.json();\n  return data;\n});\nexport const vocabularySlice = createSlice({\n  name: 'Slice: Vocabulary',\n  initialState,\n  reducers: {\n    pushEnglish: (state, action) => {\n      state.english.push(action.payload);\n    },\n    pushRussian: (state, action) => {\n      state.russian.push(action.payload);\n    },\n    pushSpelling: (state, action) => {\n      state.spelling.push(action.payload);\n    },\n    pushAuding: (state, action) => {\n      state.auding.push(action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getVocabularyThunk.fulfilled, (_, action) => action.payload);\n    builder.addCase(getVocabularyThunk.rejected, (_, __) => initialState);\n  }\n});\nexport const getVocabularyEnglish = state => state.vocabulary.english;\nexport const getVocabularyRussian = state => state.vocabulary.russian;\nexport const getVocabularySpelling = state => state.vocabulary.spelling;\nexport const getVocabularyAuding = state => state.vocabulary.auding;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","english","russian","spelling","auding","getVocabularyThunk","_","thunkAPI","user","getState","console","log","response","fetch","id","data","json","vocabularySlice","name","reducers","pushEnglish","state","action","push","payload","pushRussian","pushSpelling","pushAuding","extraReducers","builder","addCase","fulfilled","rejected","__","getVocabularyEnglish","vocabulary","getVocabularyRussian","getVocabularySpelling","getVocabularyAuding"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/app/clientAPI/vocabularyAPI.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../store'\nimport { User, Vocabulary } from '../types/types'\n\nconst initialState: Vocabulary = {\n    english: [],\n    russian: [],\n    spelling: [],\n    auding: []\n}\nexport const getVocabularyThunk = createAsyncThunk<Vocabulary, void, { state: RootState }>(\n    'Thunk: getVocabulary',\n    async function(_, thunkAPI) {\n        const { user } = thunkAPI.getState() as { user: User}\n\n        console.log('userId thunk',user)\n        const response = await fetch(`http://localhost:3002/vocabulary/${user.id}`)\n        const data = await response.json()\n        return data\n    }\n)\nexport const vocabularySlice = createSlice<Vocabulary, {}>({\n    name: 'Slice: Vocabulary',\n    initialState,\n    reducers: {\n        pushEnglish: (state: Vocabulary, action: PayloadAction<number>) => {\n            state.english.push(action.payload);\n        },\n        pushRussian: (state: Vocabulary, action: PayloadAction<number>) => {\n            state.russian.push(action.payload);\n        },\n        pushSpelling: (state: Vocabulary, action: PayloadAction<number>) => {\n            state.spelling.push(action.payload);\n        },\n        pushAuding: (state: Vocabulary, action: PayloadAction<number>) => {\n            state.auding.push(action.payload);\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(getVocabularyThunk.fulfilled, (_, action) => action.payload)\n        builder.addCase(getVocabularyThunk.rejected, (_, __) => initialState)\n    }\n})\n\nexport const getVocabularyEnglish = (state: RootState) => state.vocabulary.english;\nexport const getVocabularyRussian = (state: RootState) => state.vocabulary.russian;\nexport const getVocabularySpelling = (state: RootState) => state.vocabulary.spelling;\nexport const getVocabularyAuding = (state: RootState) => state.vocabulary.auding;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAI/E,MAAMC,YAAwB,GAAG;EAC7BC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE;AACZ,CAAC;AACD,OAAO,MAAMC,kBAAkB,GAAGP,gBAAgB,CAC9C,sBAAsB,EACtB,gBAAeQ,CAAC,EAAEC,QAAQ,EAAE;EACxB,MAAM;IAAEC;EAAK,CAAC,GAAGD,QAAQ,CAACE,QAAQ,EAAmB;EAErDC,OAAO,CAACC,GAAG,CAAC,cAAc,EAACH,IAAI,CAAC;EAChC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCL,IAAI,CAACM,EAAG,EAAC,CAAC;EAC3E,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;EAClC,OAAOD,IAAI;AACf,CAAC,CACJ;AACD,OAAO,MAAME,eAAe,GAAGlB,WAAW,CAAiB;EACvDmB,IAAI,EAAE,mBAAmB;EACzBlB,YAAY;EACZmB,QAAQ,EAAE;IACNC,WAAW,EAAE,CAACC,KAAiB,EAAEC,MAA6B,KAAK;MAC/DD,KAAK,CAACpB,OAAO,CAACsB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACtC,CAAC;IACDC,WAAW,EAAE,CAACJ,KAAiB,EAAEC,MAA6B,KAAK;MAC/DD,KAAK,CAACnB,OAAO,CAACqB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACtC,CAAC;IACDE,YAAY,EAAE,CAACL,KAAiB,EAAEC,MAA6B,KAAK;MAChED,KAAK,CAAClB,QAAQ,CAACoB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACvC,CAAC;IACDG,UAAU,EAAE,CAACN,KAAiB,EAAEC,MAA6B,KAAK;MAC9DD,KAAK,CAACjB,MAAM,CAACmB,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACrC;EACJ,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACzB,kBAAkB,CAAC0B,SAAS,EAAE,CAACzB,CAAC,EAAEgB,MAAM,KAAKA,MAAM,CAACE,OAAO,CAAC;IAC5EK,OAAO,CAACC,OAAO,CAACzB,kBAAkB,CAAC2B,QAAQ,EAAE,CAAC1B,CAAC,EAAE2B,EAAE,KAAKjC,YAAY,CAAC;EACzE;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMkC,oBAAoB,GAAIb,KAAgB,IAAKA,KAAK,CAACc,UAAU,CAAClC,OAAO;AAClF,OAAO,MAAMmC,oBAAoB,GAAIf,KAAgB,IAAKA,KAAK,CAACc,UAAU,CAACjC,OAAO;AAClF,OAAO,MAAMmC,qBAAqB,GAAIhB,KAAgB,IAAKA,KAAK,CAACc,UAAU,CAAChC,QAAQ;AACpF,OAAO,MAAMmC,mBAAmB,GAAIjB,KAAgB,IAAKA,KAAK,CAACc,UAAU,CAAC/B,MAAM"},"metadata":{},"sourceType":"module"}