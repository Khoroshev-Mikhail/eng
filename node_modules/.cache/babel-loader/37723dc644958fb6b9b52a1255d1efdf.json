{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/Components/Methods/English/English.tsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { useGetUnlernedQuery, useSetVocabularyMutation } from '../../../app/API/vocabularyAPI';\nimport Completed from '../../Comlpeted/Completed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function English(props) {\n  _s();\n  const user = useSelector(state => state.userData);\n  const method = 'english';\n  const defaultImg = '51_ccc.jpeg';\n  const userId = 1;\n  const {\n    data,\n    isSuccess,\n    refetch\n  } = useGetUnlernedQuery({\n    userId,\n    method,\n    groupId: props.id\n  });\n  const [setVocabulary] = useSetVocabularyMutation();\n  const answer = id => {\n    if (data.trueVariant.id === id) {\n      setTimeout(() => setVocabulary({\n        userId,\n        method,\n        word_id: id\n      }), 1000);\n    } else {\n      refetch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isSuccess && data !== null && data !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full sm:w-96 mx-auto bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => alert('repeat audio'),\n          className: \"rounded-t-lg\",\n          src: 'http://localhost:3002/img/' + (data.trueVariant.img || defaultImg),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-2 text-center text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",\n          children: data.trueVariant.eng\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), data.falseVariant.map((el, i) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => answer(el.id),\n            type: \"button\",\n            className: \"text-green-700 py-4 my-4 w-full hover:text-white border border-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-green-500 dark:text-green-500 dark:hover:text-white dark:hover:bg-green-600 dark:focus:ring-green-800\",\n            children: el.rus\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), !data && /*#__PURE__*/_jsxDEV(Completed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n_s(English, \"fmxaVd3T0Er9m66AjD/s4pzhz50=\", false, function () {\n  return [useSelector, useGetUnlernedQuery, useSetVocabularyMutation];\n});\n_c = English;\nvar _c;\n$RefreshReg$(_c, \"English\");","map":{"version":3,"names":["useSelector","useGetUnlernedQuery","useSetVocabularyMutation","Completed","English","props","user","state","userData","method","defaultImg","userId","data","isSuccess","refetch","groupId","id","setVocabulary","answer","trueVariant","setTimeout","word_id","undefined","alert","img","eng","falseVariant","map","el","i","rus"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/Methods/English/English.tsx"],"sourcesContent":["import { useSelector } from 'react-redux'\nimport { useGetUnlernedQuery, useSetVocabularyMutation } from '../../../app/API/vocabularyAPI'\nimport { RootState } from '../../../app/store'\nimport { Word, Group} from '../../../app/types/types'\nimport Completed from '../../Comlpeted/Completed'\nexport default function English(props: Group){\n    const user = useSelector((state: RootState) => state.userData)\n    const method = 'english'\n    const defaultImg = '51_ccc.jpeg'\n    const userId = 1\n    const { data, isSuccess, refetch } = useGetUnlernedQuery({userId, method, groupId: props.id})\n    const [ setVocabulary ] = useSetVocabularyMutation()\n    const answer = (id: number) => {\n        if(data.trueVariant.id === id){\n            setTimeout(()=> setVocabulary({userId, method, word_id: id}), 1000)\n        } else{\n            refetch()\n        }\n    }\n    return(\n        <>  \n            {isSuccess && data !== null && data !== undefined &&\n            <div className=\"w-full sm:w-96 mx-auto bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n                <a href=\"#\">\n                    <img onClick={()=>alert('repeat audio')} className=\"rounded-t-lg\" src={'http://localhost:3002/img/' + (data.trueVariant.img || defaultImg)} alt=\"\" />\n                </a>\n                <div className=\"p-5\">\n                    <h5 className=\"mb-2 text-center text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">{data.trueVariant.eng}</h5>\n                    {data.falseVariant.map((el: Word, i: number) => {\n                        return (\n                            <button onClick={()=>answer(el.id)} key={i} type=\"button\" className=\"text-green-700 py-4 my-4 w-full hover:text-white border border-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:border-green-500 dark:text-green-500 dark:hover:text-white dark:hover:bg-green-600 dark:focus:ring-green-800\">\n                                {el.rus}\n                            </button>\n                        )\n                    })} \n                </div>\n            </div>\n            }\n            {!data && <Completed /> }\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,mBAAmB,EAAEC,wBAAwB,QAAQ,gCAAgC;AAG9F,OAAOC,SAAS,MAAM,2BAA2B;AAAA;AAAA;AACjD,eAAe,SAASC,OAAO,CAACC,KAAY,EAAC;EAAA;EACzC,MAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAgB,IAAKA,KAAK,CAACC,QAAQ,CAAC;EAC9D,MAAMC,MAAM,GAAG,SAAS;EACxB,MAAMC,UAAU,GAAG,aAAa;EAChC,MAAMC,MAAM,GAAG,CAAC;EAChB,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGb,mBAAmB,CAAC;IAACU,MAAM;IAAEF,MAAM;IAAEM,OAAO,EAAEV,KAAK,CAACW;EAAE,CAAC,CAAC;EAC7F,MAAM,CAAEC,aAAa,CAAE,GAAGf,wBAAwB,EAAE;EACpD,MAAMgB,MAAM,GAAIF,EAAU,IAAK;IAC3B,IAAGJ,IAAI,CAACO,WAAW,CAACH,EAAE,KAAKA,EAAE,EAAC;MAC1BI,UAAU,CAAC,MAAKH,aAAa,CAAC;QAACN,MAAM;QAAEF,MAAM;QAAEY,OAAO,EAAEL;MAAE,CAAC,CAAC,EAAE,IAAI,CAAC;IACvE,CAAC,MAAK;MACFF,OAAO,EAAE;IACb;EACJ,CAAC;EACD,oBACI;IAAA,WACKD,SAAS,IAAID,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAKU,SAAS,iBACjD;MAAK,SAAS,EAAC,mHAAmH;MAAA,wBAC9H;QAAG,IAAI,EAAC,GAAG;QAAA,uBACP;UAAK,OAAO,EAAE,MAAIC,KAAK,CAAC,cAAc,CAAE;UAAC,SAAS,EAAC,cAAc;UAAC,GAAG,EAAE,4BAA4B,IAAIX,IAAI,CAACO,WAAW,CAACK,GAAG,IAAId,UAAU,CAAE;UAAC,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACrJ,eACJ;QAAK,SAAS,EAAC,KAAK;QAAA,wBAChB;UAAI,SAAS,EAAC,kFAAkF;UAAA,UAAEE,IAAI,CAACO,WAAW,CAACM;QAAG;UAAA;UAAA;UAAA;QAAA,QAAM,EAC3Hb,IAAI,CAACc,YAAY,CAACC,GAAG,CAAC,CAACC,EAAQ,EAAEC,CAAS,KAAK;UAC5C,oBACI;YAAQ,OAAO,EAAE,MAAIX,MAAM,CAACU,EAAE,CAACZ,EAAE,CAAE;YAAS,IAAI,EAAC,QAAQ;YAAC,SAAS,EAAC,qUAAqU;YAAA,UACpYY,EAAE,CAACE;UAAG,GAD8BD,CAAC;YAAA;YAAA;YAAA;UAAA,QAEjC;QAEjB,CAAC,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,EAEL,CAACjB,IAAI,iBAAI,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACxB;AAEX;AAAC,GApCuBR,OAAO;EAAA,QACdJ,WAAW,EAIaC,mBAAmB,EAC9BC,wBAAwB;AAAA;AAAA,KAN9BE,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}