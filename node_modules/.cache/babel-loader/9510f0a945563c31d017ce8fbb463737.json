{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst user = {\n  id: 0,\n  user_login: null,\n  user_name: null,\n  email: null,\n  token: null,\n  refresh_token: null,\n  jwtExpire: null\n};\nexport const userThunk = createAsyncThunk('userThunk', async function () {\n  const response = await fetch('http://localhost:3002/user', {\n    method: 'POST'\n  });\n  //Записать во время фуллфиелд в локалстораде через мидлвейр\n  const data = await response.json();\n  return data;\n});\nexport const loginThunk = createAsyncThunk('loginThunk', async function (obj) {\n  const response = await fetch('http://localhost:3002/auth', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({\n      password: obj.password,\n      login: obj.login\n    })\n  });\n  const data = await response.json();\n  if (response.ok) {\n    localStorage.setItem('id', data.id);\n    localStorage.setItem('login', data.login);\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('refreshToken', data.refreshToken);\n    localStorage.setItem('jwtExpire', data.jwtExpire); //Изменить на нижнее подчеркивание\n  }\n\n  const {\n    id,\n    user_login,\n    email,\n    user_name,\n    jwtExpire\n  } = data;\n  return {\n    id,\n    user_login,\n    email,\n    user_name,\n    jwtExpire\n  };\n});\nexport const loginByRefreshThunk = createAsyncThunk('loginByRefreshThunk', async function () {\n  const response = await fetch('http://localhost:3002/authByRefreshToken', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({\n      refreshToken: localStorage.getItem('refreshToken')\n    })\n  });\n  const data = await response.json();\n  if (response.ok) {\n    localStorage.setItem('id', data.id);\n    localStorage.setItem('login', data.login);\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('refreshToken', data.refreshToken);\n    localStorage.setItem('jwtExpire', data.jwtExpire); //Изменить на нижнее подчеркивание\n  }\n  //Наверно здесь if как-то криво\n  const {\n    id,\n    user_login,\n    email,\n    user_name,\n    jwtExpire\n  } = data;\n  return {\n    id,\n    user_login,\n    email,\n    user_name,\n    jwtExpire\n  };\n});\nexport const exitThunk = createAsyncThunk('exitThunk', async function () {\n  const response = await fetch(`http://localhost:3002/logout/${localStorage.getItem('id')}`); //Обратиться с стейт напрямую, и взять оттуда id\n  const data = await response.json();\n  if (response.ok) {\n    localStorage.removeItem('id');\n    localStorage.removeItem('login');\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('jwtExpire');\n  }\n  return data;\n});\nexport const userSlice = createSlice({\n  name: 'userSlice',\n  initialState: user,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(userThunk.fulfilled, (_, action) => action.payload);\n    builder.addCase(loginThunk.fulfilled, (_, action) => action.payload);\n    builder.addCase(loginByRefreshThunk.fulfilled, (_, action) => action.payload); //Нужен ли здесь addCase с rejeted\n    builder.addCase(loginThunk.rejected, (_, __) => {\n      localStorage.removeItem('id');\n      localStorage.removeItem('login');\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('jwtExpire');\n      return user; //попробуй this.initialState или чтото вроде того\n    });\n\n    builder.addCase(exitThunk.fulfilled, (_, action) => user); //попробуй this.initialState\n  }\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","user","id","user_login","user_name","email","token","refresh_token","jwtExpire","userThunk","response","fetch","method","data","json","loginThunk","obj","headers","body","JSON","stringify","password","login","ok","localStorage","setItem","refreshToken","loginByRefreshThunk","getItem","exitThunk","removeItem","userSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","_","action","payload","rejected","__"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/app/API/userAPI.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { User } from '../types/types'\n\nconst user: User = { id: 0, user_login: null, user_name: null, email: null, token: null, refresh_token: null, jwtExpire: null }\nexport const userThunk = createAsyncThunk(\n    'userThunk',\n    async function() {\n        const response = await fetch('http://localhost:3002/user', {\n            method: 'POST'\n        })\n        //Записать во время фуллфиелд в локалстораде через мидлвейр\n        const data: User = await response.json()\n        return data\n    }\n)\nexport const loginThunk = createAsyncThunk(\n    'loginThunk',\n    async function(obj: any) {\n        const response = await fetch('http://localhost:3002/auth', {\n            method: 'POST',            \n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            }, \n            body: JSON.stringify({password: obj.password, login: obj.login})\n        })\n        const data = await response.json()\n        if(response.ok){\n            localStorage.setItem('id', data.id);\n            localStorage.setItem('login', data.login);\n            localStorage.setItem('token', data.token);\n            localStorage.setItem('refreshToken', data.refreshToken);\n            localStorage.setItem('jwtExpire', data.jwtExpire); //Изменить на нижнее подчеркивание\n        }\n        const { id, user_login, email, user_name, jwtExpire } = data\n        return { id, user_login, email, user_name, jwtExpire }\n    }\n)\nexport const loginByRefreshThunk = createAsyncThunk(\n    'loginByRefreshThunk',\n    async function() {\n        const response = await fetch('http://localhost:3002/authByRefreshToken', {\n            method: 'POST',            \n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            }, \n            body: JSON.stringify({\n                refreshToken: localStorage.getItem('refreshToken')\n            })\n        })\n        const data = await response.json()\n        if(response.ok){\n            localStorage.setItem('id', data.id);\n            localStorage.setItem('login', data.login);\n            localStorage.setItem('token', data.token);\n            localStorage.setItem('refreshToken', data.refreshToken);\n            localStorage.setItem('jwtExpire', data.jwtExpire); //Изменить на нижнее подчеркивание\n        }\n        //Наверно здесь if как-то криво\n        const { id, user_login, email, user_name, jwtExpire } = data\n        return { id, user_login, email, user_name, jwtExpire }\n    }\n)\nexport const exitThunk = createAsyncThunk(\n    'exitThunk',\n    async function() {\n        const response = await fetch(`http://localhost:3002/logout/${localStorage.getItem('id')}`)//Обратиться с стейт напрямую, и взять оттуда id\n        const data = await response.json()\n        if(response.ok){\n            localStorage.removeItem('id')\n            localStorage.removeItem('login')\n            localStorage.removeItem('token')\n            localStorage.removeItem('refreshToken')\n            localStorage.removeItem('jwtExpire')\n        }\n        return data\n    }\n)\n\nexport const userSlice = createSlice({\n    name: 'userSlice',\n    initialState: user,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(userThunk.fulfilled, (_, action) => action.payload)\n        builder.addCase(loginThunk.fulfilled, (_, action) => action.payload)\n        builder.addCase(loginByRefreshThunk.fulfilled, (_, action) => action.payload) //Нужен ли здесь addCase с rejeted\n        builder.addCase(loginThunk.rejected, (_, __) => {\n            localStorage.removeItem('id')\n            localStorage.removeItem('login')\n            localStorage.removeItem('token')\n            localStorage.removeItem('refreshToken')\n            localStorage.removeItem('jwtExpire')\n            return user //попробуй this.initialState или чтото вроде того\n          })\n        builder.addCase(exitThunk.fulfilled, (_, action) => user)//попробуй this.initialState\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}