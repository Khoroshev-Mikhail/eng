{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { ID, REFRESH_TOKEN } from '../consts';\nimport { removeUserFromLocalStorage, setUserToLocalStorage } from '../fns/localStorageFns';\nconst user = {\n  id: 0,\n  user_login: null,\n  user_name: null,\n  email: null,\n  token: null,\n  refresh_token: null,\n  jwtExpire: null\n};\nexport const loginThunk = createAsyncThunk('loginThunk', async function (obj) {\n  const response = await fetch('http://localhost:3002/auth', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({\n      password: obj.password,\n      login: obj.login\n    })\n  });\n  const user = await response.json();\n  if (response.ok) {\n    setUserToLocalStorage(user);\n  }\n  const {\n    id,\n    user_login,\n    email,\n    user_name,\n    jwtExpire\n  } = user;\n  return {\n    id,\n    user_login,\n    email,\n    user_name,\n    jwtExpire\n  };\n});\nexport const loginByRefreshThunk = createAsyncThunk('loginByRefreshThunk', async function () {\n  const response = await fetch('http://localhost:3002/authByRefreshToken', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({\n      refreshToken: localStorage.getItem(REFRESH_TOKEN)\n    })\n  });\n  const user = await response.json();\n  if (response.ok) {\n    setUserToLocalStorage(user);\n  }\n  //Наверно здесь if как-то криво\n  const {\n    id,\n    user_login,\n    email,\n    user_name,\n    jwtExpire\n  } = user;\n  return {\n    id,\n    user_login,\n    email,\n    user_name,\n    jwtExpire\n  };\n});\nexport const exitThunk = createAsyncThunk('exitThunk', async function () {\n  const response = await fetch(`http://localhost:3002/logout/${localStorage.getItem(ID)}`); //Обратиться с стейт напрямую, и взять оттуда id\n  const data = await response.json();\n  if (response.ok) {\n    removeUserFromLocalStorage();\n  }\n  return data;\n});\nexport const userSlice = createSlice({\n  name: 'userSlice',\n  initialState: user,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loginThunk.fulfilled, (_, action) => action.payload);\n    builder.addCase(loginByRefreshThunk.fulfilled, (_, action) => action.payload); //Нужен ли здесь addCase с rejeted\n    builder.addCase(loginThunk.rejected, (_, __) => {\n      removeUserFromLocalStorage();\n      return user; //попробуй this.initialState или чтото вроде того\n    });\n\n    builder.addCase(exitThunk.fulfilled, (_, action) => user); //попробуй this.initialState\n  }\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","ID","REFRESH_TOKEN","removeUserFromLocalStorage","setUserToLocalStorage","user","id","user_login","user_name","email","token","refresh_token","jwtExpire","loginThunk","obj","response","fetch","method","headers","body","JSON","stringify","password","login","json","ok","loginByRefreshThunk","refreshToken","localStorage","getItem","exitThunk","data","userSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","_","action","payload","rejected","__"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/app/API/userAPI.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ID, REFRESH_TOKEN } from '../consts'\nimport { removeUserFromLocalStorage, setUserToLocalStorage } from '../fns/localStorageFns'\nimport { User } from '../types/types'\n\nconst user: User = { id: 0, user_login: null, user_name: null, email: null, token: null, refresh_token: null, jwtExpire: null }\n\nexport const loginThunk = createAsyncThunk(\n    'loginThunk',\n    async function(obj: any) {\n        const response = await fetch('http://localhost:3002/auth', {\n            method: 'POST',            \n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            }, \n            body: JSON.stringify({password: obj.password, login: obj.login})\n        })\n        const user = await response.json()\n        if(response.ok){\n            setUserToLocalStorage(user)\n        }\n        const { id, user_login, email, user_name, jwtExpire } = user\n        return { id, user_login, email, user_name, jwtExpire }\n    }\n)\nexport const loginByRefreshThunk = createAsyncThunk(\n    'loginByRefreshThunk',\n    async function() {\n        const response = await fetch('http://localhost:3002/authByRefreshToken', {\n            method: 'POST',            \n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            }, \n            body: JSON.stringify({\n                refreshToken: localStorage.getItem(REFRESH_TOKEN)\n            })\n        })\n        const user = await response.json()\n        if(response.ok){\n            setUserToLocalStorage(user)\n        }\n        //Наверно здесь if как-то криво\n        const { id, user_login, email, user_name, jwtExpire } = user\n        return { id, user_login, email, user_name, jwtExpire }\n    }\n)\nexport const exitThunk = createAsyncThunk(\n    'exitThunk',\n    async function() {\n        const response = await fetch(`http://localhost:3002/logout/${localStorage.getItem(ID)}`)//Обратиться с стейт напрямую, и взять оттуда id\n        const data = await response.json()\n        if(response.ok){\n            removeUserFromLocalStorage()\n        }\n        return data\n    }\n)\n\nexport const userSlice = createSlice({\n    name: 'userSlice',\n    initialState: user,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(loginThunk.fulfilled, (_, action) => action.payload)\n        builder.addCase(loginByRefreshThunk.fulfilled, (_, action) => action.payload) //Нужен ли здесь addCase с rejeted\n        builder.addCase(loginThunk.rejected, (_, __) => {\n            removeUserFromLocalStorage()\n            return user //попробуй this.initialState или чтото вроде того\n          })\n        builder.addCase(exitThunk.fulfilled, (_, action) => user)//попробуй this.initialState\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}