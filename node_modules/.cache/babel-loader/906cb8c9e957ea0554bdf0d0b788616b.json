{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/AdminComponents/AdminWords/AdminWords.tsx\",\n  _s = $RefreshSig$();\nimport { Checkbox, Table } from \"flowbite-react\";\nimport { useGetAllWordsQuery } from \"../../app/API/wordAPI\";\nimport AdminWordsRow from \"./AdminWordsRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminWords() {\n  _s();\n  const {\n    data,\n    isSuccess\n  } = useGetAllWordsQuery();\n  return /*#__PURE__*/_jsxDEV(Table, {\n    hoverable: true,\n    children: [/*#__PURE__*/_jsxDEV(Table.Head, {\n      children: [/*#__PURE__*/_jsxDEV(Table.HeadCell, {\n        className: \"!p-4\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n        className: \"!px-2\",\n        children: \"ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n        children: \"Russian\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n      className: \"divide-y\",\n      children: isSuccess && [...data].sort((a, b) => b.id - a.id).map((word, i) => {\n        return /*#__PURE__*/_jsxDEV(AdminWordsRow, {\n          ...word\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminWords, \"MJeDdha5IXGNMka3At6PTTubp2A=\", false, function () {\n  return [useGetAllWordsQuery];\n});\n_c = AdminWords;\nvar _c;\n$RefreshReg$(_c, \"AdminWords\");","map":{"version":3,"names":["Checkbox","Table","useGetAllWordsQuery","AdminWordsRow","AdminWords","data","isSuccess","sort","a","b","id","map","word","i"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/AdminComponents/AdminWords/AdminWords.tsx"],"sourcesContent":["import { Checkbox, Table, TextInput } from \"flowbite-react\"\nimport { useGetAllWordsQuery } from \"../../app/API/wordAPI\"\nimport { Word } from \"../../app/types/types\"\nimport AdminWordsRow from \"./AdminWordsRow\"\n\n\nexport default function AdminWords(){\n    const {data, isSuccess} = useGetAllWordsQuery()\n    return (\n        <Table hoverable={true}>\n            <Table.Head>\n                <Table.HeadCell className=\"!p-4\"><Checkbox /></Table.HeadCell>\n                <Table.HeadCell className=\"!px-2\">ID</Table.HeadCell>\n                <Table.HeadCell>English</Table.HeadCell>\n                <Table.HeadCell>Russian</Table.HeadCell>\n                <Table.HeadCell>Delete</Table.HeadCell>\n            </Table.Head>\n            <Table.Body className=\"divide-y\">\n                {isSuccess && \n                [...data].sort((a: Word, b: Word) => b.id - a.id).map((word: Word, i: number) => {\n                        return (\n                            <AdminWordsRow key={i} {...word}/>\n                        )\n                    })\n                }\n            </Table.Body>\n        </Table>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,KAAK,QAAmB,gBAAgB;AAC3D,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D,OAAOC,aAAa,MAAM,iBAAiB;AAAA;AAG3C,eAAe,SAASC,UAAU,GAAE;EAAA;EAChC,MAAM;IAACC,IAAI;IAAEC;EAAS,CAAC,GAAGJ,mBAAmB,EAAE;EAC/C,oBACI,QAAC,KAAK;IAAC,SAAS,EAAE,IAAK;IAAA,wBACnB,QAAC,KAAK,CAAC,IAAI;MAAA,wBACP,QAAC,KAAK,CAAC,QAAQ;QAAC,SAAS,EAAC,MAAM;QAAA,uBAAC,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAiB,eAC9D,QAAC,KAAK,CAAC,QAAQ;QAAC,SAAS,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACrD,QAAC,KAAK,CAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,eACxC,QAAC,KAAK,CAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,eACxC,QAAC,KAAK,CAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B,eACb,QAAC,KAAK,CAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,UAC3BI,SAAS,IACV,CAAC,GAAGD,IAAI,CAAC,CAACE,IAAI,CAAC,CAACC,CAAO,EAAEC,CAAO,KAAKA,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAU,EAAEC,CAAS,KAAK;QACzE,oBACI,QAAC,aAAa;UAAA,GAAaD;QAAI,GAAXC,CAAC;UAAA;UAAA;UAAA;QAAA,QAAa;MAE1C,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEG;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEhB;AAAC,GAtBuBT,UAAU;EAAA,QACJF,mBAAmB;AAAA;AAAA,KADzBE,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}