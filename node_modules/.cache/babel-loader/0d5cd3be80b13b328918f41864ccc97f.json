{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/Components/BreadCrumbp/BreadCrumb.tsx\";\nimport { Breadcrumb } from \"flowbite-react\";\nimport { HomeIcon } from '@heroicons/react/24/solid';\nimport useBreadcrumbs from \"use-react-router-breadcrumbs\";\nimport { useGetGroupsQuery } from \"../../app/API/groupsAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const {\n    data: groups = [],\n    isSuccess\n  } = useGetGroupsQuery();\n  const defaultRoutes = [{\n    path: \"/\",\n    breadcrumb: \"Главная\"\n  }, {\n    path: \"/:Group/English\",\n    breadcrumb: \"Английский - Русский\"\n  }, {\n    path: \"/:Group/Russian\",\n    breadcrumb: \"Русский - Английский\"\n  }, {\n    path: \"/:Group/Spelling\",\n    breadcrumb: \"По буквам\"\n  }, {\n    path: \"/:Group/Auding\",\n    breadcrumb: \"Аудирование\"\n  }];\n  const routesFromGroup = isSuccess ? groups.map(el => ({\n    path: el.title,\n    breadcrumb: el.title_rus\n  })) : [];\n  const routes = defaultRoutes.concat(routesFromGroup);\n  const breadcrumbs = useBreadcrumbs(routes);\n  return /*#__PURE__*/_jsxDEV(Breadcrumb, {\n    \"aria-label\": \"Default breadcrumb example\",\n    className: \"m-2 my-4\",\n    children: breadcrumbs.map(_ref => {\n      let {\n        breadcrumb,\n        match\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n        icon: match.pathname === '/' ? HomeIcon : undefined,\n        href: match.pathname,\n        children: [breadcrumb, \" \"]\n      }, match.pathname, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["Breadcrumb","HomeIcon","useBreadcrumbs","useGetGroupsQuery","data","groups","isSuccess","defaultRoutes","path","breadcrumb","routesFromGroup","map","el","title","title_rus","routes","concat","breadcrumbs","match","pathname","undefined"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/BreadCrumbp/BreadCrumb.tsx"],"sourcesContent":["import { Breadcrumb } from \"flowbite-react\";\nimport { HomeIcon } from '@heroicons/react/24/solid'\nimport useBreadcrumbs from \"use-react-router-breadcrumbs\";\nimport {useLinkClickHandler, useLocation} from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useGetGroupsQuery } from \"../../app/API/groupsAPI\";\nimport { Group } from \"../../app/types/types\";\n\ntype RouteType = {\n    path: string,\n    breadcrumb: string\n}\n\nexport default function(){\n    const {data: groups = [], isSuccess} = useGetGroupsQuery()\n    const defaultRoutes = [\n        { path: \"/\", breadcrumb: \"Главная\" },\n        { path: \"/:Group/English\", breadcrumb: \"Английский - Русский\" },\n        { path: \"/:Group/Russian\", breadcrumb: \"Русский - Английский\" },\n        { path: \"/:Group/Spelling\", breadcrumb: \"По буквам\" },\n        { path: \"/:Group/Auding\", breadcrumb: \"Аудирование\" },\n      ];\n    const routesFromGroup: RouteType[] = isSuccess ? groups.map(el => ({path: el.title, breadcrumb: el.title_rus})) : []\n    const routes = defaultRoutes.concat(routesFromGroup)\n    const breadcrumbs = useBreadcrumbs(routes);\n    return (\n        <Breadcrumb aria-label=\"Default breadcrumb example\" className=\"m-2 my-4\">\n            {breadcrumbs.map(({ breadcrumb, match }) => {\n                return (\n                    <Breadcrumb.Item icon={match.pathname === '/' ? HomeIcon : undefined} key={match.pathname} href={match.pathname} >  \n                        {breadcrumb} {/* При клике страница перезагружается */}\n                    </Breadcrumb.Item>\n                )\n            })}\n            \n        </Breadcrumb>\n    )\n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAOC,cAAc,MAAM,8BAA8B;AAGzD,SAASC,iBAAiB,QAAQ,yBAAyB;AAAC;AAQ5D,eAAe,YAAU;EACrB,MAAM;IAACC,IAAI,EAAEC,MAAM,GAAG,EAAE;IAAEC;EAAS,CAAC,GAAGH,iBAAiB,EAAE;EAC1D,MAAMI,aAAa,GAAG,CAClB;IAAEC,IAAI,EAAE,GAAG;IAAEC,UAAU,EAAE;EAAU,CAAC,EACpC;IAAED,IAAI,EAAE,iBAAiB;IAAEC,UAAU,EAAE;EAAuB,CAAC,EAC/D;IAAED,IAAI,EAAE,iBAAiB;IAAEC,UAAU,EAAE;EAAuB,CAAC,EAC/D;IAAED,IAAI,EAAE,kBAAkB;IAAEC,UAAU,EAAE;EAAY,CAAC,EACrD;IAAED,IAAI,EAAE,gBAAgB;IAAEC,UAAU,EAAE;EAAc,CAAC,CACtD;EACH,MAAMC,eAA4B,GAAGJ,SAAS,GAAGD,MAAM,CAACM,GAAG,CAACC,EAAE,KAAK;IAACJ,IAAI,EAAEI,EAAE,CAACC,KAAK;IAAEJ,UAAU,EAAEG,EAAE,CAACE;EAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACpH,MAAMC,MAAM,GAAGR,aAAa,CAACS,MAAM,CAACN,eAAe,CAAC;EACpD,MAAMO,WAAW,GAAGf,cAAc,CAACa,MAAM,CAAC;EAC1C,oBACI,QAAC,UAAU;IAAC,cAAW,4BAA4B;IAAC,SAAS,EAAC,UAAU;IAAA,UACnEE,WAAW,CAACN,GAAG,CAAC,QAA2B;MAAA,IAA1B;QAAEF,UAAU;QAAES;MAAM,CAAC;MACnC,oBACI,QAAC,UAAU,CAAC,IAAI;QAAC,IAAI,EAAEA,KAAK,CAACC,QAAQ,KAAK,GAAG,GAAGlB,QAAQ,GAAGmB,SAAU;QAAsB,IAAI,EAAEF,KAAK,CAACC,QAAS;QAAA,WAC3GV,UAAU;MAAA,GAD4DS,KAAK,CAACC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAEvE;IAE1B,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEO;AAErB"},"metadata":{},"sourceType":"module"}