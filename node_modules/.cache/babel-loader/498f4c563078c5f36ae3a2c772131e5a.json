{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { WORD_IDS } from \"../../app/variables/dbVariables\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function References(props) {\n  _s();\n  const [references, setReferences] = useState();\n  useEffect(() => {\n    fetch(`http://localhost:3002/groups/${props.groupId || props.textId || props.audioId || props.videoId}/references`).then(response => {\n      return response.json();\n    }).then(response => {\n      if (response && response.hasOwnProperty(WORD_IDS)) {}\n    }).catch(err => {});\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  // Здесь отдельно карточки с грамматикой если есть\n  ;\n}\n_s(References, \"btE2ji32HJZdIy8zknmqaBzHjuo=\");\n_c = References;\nvar _c;\n$RefreshReg$(_c, \"References\");","map":{"version":3,"names":["useEffect","useState","WORD_IDS","References","props","references","setReferences","fetch","groupId","textId","audioId","videoId","then","response","json","hasOwnProperty","catch","err"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/References/References.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { WORD_IDS } from \"../../app/variables/dbVariables\";\n\nexport function References(props : { groupId?: number, textId?: number, audioId?: number, videoId?: number}){\n    const [ references, setReferences ] = useState()\n    useEffect(()=>{\n        fetch(`http://localhost:3002/groups/${props.groupId || props.textId || props.audioId || props.videoId}/references`)\n        .then( response => {\n            return response.json()\n        })\n        .then(response =>{\n            if(response && response.hasOwnProperty(WORD_IDS)){\n                \n            }\n        })\n        .catch(err => {\n           \n        })\n    }, [ props ])\n    return (\n        <>\n            {/* {! props.groupId && <GroupCard />} */}\n            {/* {! props.textId && <TextCard />} */}\n            {/* {! props.audioId && <GroupCard />} */}\n            {/* {! props.videoId && <GroupCard />} */}\n\n        </>\n        // Здесь отдельно карточки с грамматикой если есть\n    )\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,iCAAiC;AAAC;AAAA;AAE3D,OAAO,SAASC,UAAU,CAACC,KAAgF,EAAC;EAAA;EACxG,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAE,GAAGL,QAAQ,EAAE;EAChDD,SAAS,CAAC,MAAI;IACVO,KAAK,CAAE,gCAA+BH,KAAK,CAACI,OAAO,IAAIJ,KAAK,CAACK,MAAM,IAAIL,KAAK,CAACM,OAAO,IAAIN,KAAK,CAACO,OAAQ,aAAY,CAAC,CAClHC,IAAI,CAAEC,QAAQ,IAAI;MACf,OAAOA,QAAQ,CAACC,IAAI,EAAE;IAC1B,CAAC,CAAC,CACDF,IAAI,CAACC,QAAQ,IAAG;MACb,IAAGA,QAAQ,IAAIA,QAAQ,CAACE,cAAc,CAACb,QAAQ,CAAC,EAAC,CAEjD;IACJ,CAAC,CAAC,CACDc,KAAK,CAACC,GAAG,IAAI,CAEd,CAAC,CAAC;EACN,CAAC,EAAE,CAAEb,KAAK,CAAE,CAAC;EACb,oBACI;EAOA;EAAA;AAER;AAAC,GA1BeD,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}