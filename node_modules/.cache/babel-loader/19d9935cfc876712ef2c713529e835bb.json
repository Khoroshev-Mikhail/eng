{"ast":null,"code":"var _jsxFileName = \"/Users/tatanaarhipova/MikeIT/eng/src/Components/Texts/TextPage/TextPage.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useGetOneTextQuery } from \"../../../app/API/textsAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextPage(props) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    data: text,\n    isSuccess\n  } = useGetOneTextQuery(id ? Number(id) : 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u0434\\u043B\\u044F \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u0410 \\u0442\\u0443\\u0442 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0434\\u043B\\u044F \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_s(TextPage, \"lKSwasutvVJ0jZu9tZI/uAXuk8U=\", false, function () {\n  return [useParams, useGetOneTextQuery];\n});\n_c = TextPage;\nvar _c;\n$RefreshReg$(_c, \"TextPage\");","map":{"version":3,"names":["useParams","useGetOneTextQuery","TextPage","props","id","data","text","isSuccess","Number"],"sources":["/Users/tatanaarhipova/MikeIT/eng/src/Components/Texts/TextPage/TextPage.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { useGetOneTextQuery } from \"../../../app/API/textsAPI\"\n\nexport default function TextPage(props: any){\n    const { id } = useParams()\n    const { data: text, isSuccess } = useGetOneTextQuery(id ? Number(id) : 1)\n    return(\n        <div>\n            {isSuccess &&\n            <div>\n                <h1>Заголовок для {id}</h1>\n                <div>А тут текст для {id}</div>\n            </div>\n            }\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,kBAAkB,QAAQ,2BAA2B;AAAA;AAE9D,eAAe,SAASC,QAAQ,CAACC,KAAU,EAAC;EAAA;EACxC,MAAM;IAAEC;EAAG,CAAC,GAAGJ,SAAS,EAAE;EAC1B,MAAM;IAAEK,IAAI,EAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGN,kBAAkB,CAACG,EAAE,GAAGI,MAAM,CAACJ,EAAE,CAAC,GAAG,CAAC,CAAC;EACzE,oBACI;IAAA,UACKG,SAAS,iBACV;MAAA,wBACI;QAAA,yFAAmBH,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAC3B;QAAA,2FAAsBA,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EAC7B;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd;AAAC,GAbuBF,QAAQ;EAAA,QACbF,SAAS,EACUC,kBAAkB;AAAA;AAAA,KAFhCC,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}